{"version":3,"sources":["Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["Knob","props","isDragging","knobPosition","knobColor","knobRadius","knobSize","onMouseDown","styles","StyleSheet","create","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","animationDuration","transformOrigin","animationIterationCount","animationTimingFunction","animationName","transform","style","x","y","className","css","onTouchStart","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelFontSize","labelValueFontSize","labelValueAppend","labelVerticalOffset","labelHide","label","value","labels","display","flexDirection","justifyContent","alignItems","color","userSelect","fontSize","marginBottom","appended","right","hide","Svg","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","progressSize","trackSize","svgFullPath","radiansOffset","progressLineCap","svg","path","overflow","id","x1","x2","offset","stopColor","strokeWidth","ref","strokeLinecap","d","touchSupported","window","SLIDER_EVENT","DOWN","UP","MOVE","knobOffset","Math","PI","bottom","getSliderRotation","number","min","max","generateRange","rangeOfNumbers","i","push","circularSlider","opacity","transition","mounted","CircularSlider","memo","knobZeroPosition","data","initialDataIndex","onChange","useState","radius","radians","dashFullArray","dashFullOffset","state","setState","useRef","offsetRelativeToDocument","useCallback","rect","current","getBoundingClientRect","scrollLeft","pageXOffset","document","documentElement","scrollTop","pageYOffset","offsetRadians","degrees","dashOffset","pointsInCircle","length","currentPoint","floor","prevState","cos","sin","event","onMouseMove","preventDefault","touch","type","changedTouches","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","onMouseUp","useEffect","getTotalLength","date","dataArrayLength","knobPositionIndex","ceil","addEventListener","passive","removeEventListener","App","wrapper","margin","h3","pre","borderRadius","backgroundColor","padding","slider","split","ReactDOM","render","getElementById"],"mappings":"mQAiFeA,EA9EF,SAACC,GAAW,IAEjBC,EAMAD,EANAC,WACAC,EAKAF,EALAE,aACAC,EAIAH,EAJAG,UAJgB,EAQhBH,EAHAI,kBALgB,MAKH,GALG,IAQhBJ,EAFAK,gBANgB,MAML,GANK,EAOhBC,EACAN,EADAM,YASEC,EAASC,IAAWC,OAAO,CAC7BC,KAAM,CACFC,SAAU,WACVC,KAAK,IAAD,OAAMP,EAAS,EAAf,MACJQ,IAAI,IAAD,OAAMR,EAAS,EAAf,MACHS,OAAQ,OACRC,OAAQ,GAGZC,SAAU,CACNF,OAAQ,YAGZG,MAAO,CACHC,mBAAoB,UAGxBC,UAAW,CACPC,kBAAmB,SACnBC,gBAAiB,UACjBC,wBAAyB,WACzBC,wBAAyB,WACzBC,cAAe,CA5BC,CACpB,KAAM,CAACC,UAAW,YAClB,MAAO,CAACA,UAAW,cACnB,OAAQ,CAACA,UAAW,iBA6BxB,OACI,yBACIC,MAAO,CAACD,UAAU,aAAD,OAAevB,EAAayB,EAA5B,eAAoCzB,EAAa0B,EAAjD,QACjBC,UAAWC,YAAIvB,EAAOG,KAAMT,GAAcM,EAAOS,UACjDV,YAAaA,EACbyB,aAAczB,GAEd,yBACI0B,MAAK,UAAK3B,EAAL,MACL4B,OAAM,UAAK5B,EAAL,MACN6B,QAAO,cAAS7B,EAAT,YAAqBA,IAE5B,4BACIwB,UAAWC,YAAIvB,EAAOY,UAAWlB,GAAcM,EAAOU,OACtDkB,KAAMhC,EACNiC,YAAY,MACZC,OAAO,OACPC,GAAIjC,EAAW,EACfkC,GAAIlC,EAAW,EACfmC,EAAGnC,EAAW,IAElB,4BACI8B,KAAMhC,EACNkC,OAAO,OACPC,GAAIjC,EAAW,EACfkC,GAAIlC,EAAW,EACfmC,EAAGpC,IAEP,0BAAM+B,KAAK,UAAUR,EAAE,KAAKC,EAAE,KAAKI,MAAM,IAAIC,OAAO,MACpD,0BAAME,KAAK,UAAUR,EAAE,KAAKC,EAAE,KAAKI,MAAM,IAAIC,OAAO,MACpD,0BAAME,KAAK,UAAUR,EAAE,KAAKC,EAAE,KAAKI,MAAM,IAAIC,OAAO,SChBrDQ,EAxDA,SAACzC,GAAW,IAEnB0C,EAQA1C,EARA0C,WACAC,EAOA3C,EAPA2C,cACAC,EAMA5C,EANA4C,mBACAC,EAKA7C,EALA6C,iBACAC,EAIA9C,EAJA8C,oBACAC,EAGA/C,EAHA+C,UACAC,EAEAhD,EAFAgD,MACAC,EACAjD,EADAiD,MAGE1C,EAASC,IAAWC,OAAO,CAC7ByC,OAAQ,CACJvC,SAAU,WACVE,IAAK,IACLD,KAAM,IACNoB,MAAO,OACPC,OAAQ,OACRkB,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAM,GAAD,OAAKb,GACVc,WAAY,OACZzC,OAAQ,GAGZkC,MAAO,CACHQ,SAAS,GAAD,OAAKb,GACbc,aAAa,QAAD,OAAUZ,EAAV,KACZnC,SAAU,YAGdgD,SAAU,CACNhD,SAAU,WACViD,MAAO,IACP/C,IAAK,EACLY,UAAW,sBAGfoC,KAAM,CACFV,QAAS,UAIjB,OACI,yBAAKtB,UAAWC,YAAIvB,EAAO2C,OAAQH,GAAaxC,EAAOsD,OACnD,yBAAKnC,MAAO,CAAC+B,SAAUd,IAAiBK,GACxC,yBAAKnB,UAAWC,YAAIvB,EAAO0C,QACvB,8BAAOA,EAAM,0BAAMpB,UAAWC,YAAIvB,EAAOoD,WAAYd,OCoBtDiB,EAtEH,SAAC9D,GAAW,IAEhBgC,EAaAhC,EAbAgC,MACAgB,EAYAhD,EAZAgD,MACAe,EAWA/D,EAXA+D,UACAC,EAUAhE,EAVAgE,gBACAC,EASAjE,EATAiE,iBACAC,EAQAlE,EARAkE,kBACAC,EAOAnE,EAPAmE,gBACAC,EAMApE,EANAoE,WACAC,EAKArE,EALAqE,aACAC,EAIAtE,EAJAsE,UACAC,EAGAvE,EAHAuE,YACAC,EAEAxE,EAFAwE,cACAC,EACAzE,EADAyE,gBAGElE,EAASC,IAAWC,OAAO,CAC7BiE,IAAK,CACD/D,SAAU,WACVI,OAAQ,GAGZ4D,KAAM,CACFlD,UAAU,UAAD,OAAY+C,EAAZ,iBAAgD,IAAfT,GAAoB,gBAC9D1C,gBAAiB,mBAIzB,OACI,yBACIW,MAAK,UAAKA,EAAL,MACLC,OAAM,UAAKD,EAAL,MACNE,QAAO,cAASF,EAAT,YAAkBA,GACzB4C,SAAS,UACT/C,UAAWC,YAAIvB,EAAOmE,MAEtB,8BACI,oCAAgBG,GAAI7B,EAAO8B,GAAG,OAAOC,GAAG,MACpC,0BAAMC,OAAO,KAAKC,UAAWf,IAC7B,0BAAMc,OAAO,OAAOC,UAAWd,MAGvC,4BACIe,YAAaZ,EACbnC,KAAK,OACLE,OAAQ+B,EACR9B,GAAIN,EAAQ,EACZO,GAAIP,EAAQ,EACZQ,EAAGR,EAAQ,IAEf,0BACIH,UAAWC,YAAIvB,EAAOoE,MACtBQ,IAAKZ,EACLP,gBAAiBA,EACjBC,iBAAkBA,EAClBiB,YAAab,EACbe,cAAmC,UAApBX,EAA8B,OAAS,QACtDtC,KAAK,OACLE,OAAM,eAAUW,EAAV,KACNqC,EAAC,sCACWrD,EAAQ,EADnB,aACyBA,EAAQ,EADjC,2CAEeA,EAAQ,EAFvB,uCAGWA,EAAQ,EAHnB,YAGwBA,EAAQ,EAHhC,oBAG6CA,EAH7C,wCAIYA,EAAQ,EAJpB,aAI0BA,EAAQ,EAJlC,qBAIgDA,EAJhD,8B,yjBCzDjB,IAAMsD,EAAkB,iBAAkBC,OAEpCC,EAAe,CACjBC,KAAMH,EAAiB,aAAe,YACtCI,GAAIJ,EAAiB,WAAa,UAClCK,KAAML,EAAiB,YAAc,aAGnCM,EAAa,CACf/E,IAAKgF,KAAKC,GAAK,EACflC,MAAO,EACPmC,QAASF,KAAKC,GAAK,EACnBlF,MAAOiF,KAAKC,IAKVE,EAAoB,SAACC,GACvB,OAAc,IAAXA,EAAqB,EACjBJ,KAAKK,IAAIL,KAAKM,IAAIF,GAAS,GAAI,IAGpCG,EAAgB,SAACF,EAAKC,GAExB,IADA,IAAIE,EAAiB,GACbC,EAAIJ,EAAKI,GAAKH,EAAKG,IACvBD,EAAeE,KAAKD,GAExB,OAAOD,GAGL9F,EAASC,IAAWC,OAAO,CAC7B+F,eAAgB,CACZ7F,SAAU,WACVwC,QAAS,eACTsD,QAAS,EACTC,WAAY,sBAGhBC,QAAS,CACLF,QAAS,KAmMFG,EA/LQC,gBAAK,YAuBjB,IAAD,IAtBF7D,aAsBE,MAtBM,QAsBN,MArBFhB,aAqBE,MArBM,IAqBN,MApBF+B,iBAoBE,MApBU,EAoBV,MAnBFmC,WAmBE,MAnBI,EAmBJ,MAlBFC,WAkBE,MAlBI,IAkBJ,MAjBFhG,iBAiBE,MAjBU,UAiBV,MAhBF2G,wBAgBE,MAhBiB,MAgBjB,MAfFpE,kBAeE,MAfW,UAeX,MAdFC,qBAcE,MAdc,OAcd,MAbFC,0BAaE,MAbmB,OAanB,MAZFC,wBAYE,MAZiB,GAYjB,MAXFC,2BAWE,MAXoB,OAWpB,MAVFC,iBAUE,aATFmB,yBASE,MATkB,UASlB,MARFC,uBAQE,MARgB,UAQhB,MAPFE,oBAOE,MAPa,EAOb,MANFD,kBAME,MANW,UAMX,MALFE,iBAKE,MALU,EAKV,MAJFyC,YAIE,MAJK,GAIL,MAHFC,yBAGE,MAHiB,EAGjB,OAFFvC,wBAEE,OAFgB,QAEhB,QADFwC,iBACE,OADS,SAAAhE,KACT,MACoBiE,mBAAS,CAC/BP,SAAS,EACT1G,YAAY,EACZ+B,MAAOA,EACPmF,OAAQnF,EAAQ,EAChB8E,iBAAkBA,EAClB9D,MAAO,EACP+D,KAAMA,EACNK,QAAS,EACT1G,KAAM,CACFiB,EAAG,EACHC,EAAG,GAEPyF,cAAe,EACfC,eAAgB,IAfd,qBACCC,GADD,MACQC,GADR,MAkBAhB,GAAiBiB,iBAAO,MACxBlD,GAAckD,iBAAO,MAErBC,GAA2BC,uBAAY,WACzC,IAAMC,EAAOpB,GAAeqB,QAAQC,wBAC9BC,EAAaxC,OAAOyC,aAAeC,SAASC,gBAAgBH,WAC5DI,EAAY5C,OAAO6C,aAAeH,SAASC,gBAAgBC,UACjE,MAAO,CAACtH,IAAK+G,EAAK/G,IAAMsH,EAAWvH,KAAMgH,EAAKhH,KAAOmH,KACtD,IAEG7H,GAAeyH,uBAAY,SAACP,GAC9B,IAAMD,EAASI,GAAMJ,OACfkB,EAAgBjB,EAAUxB,EAAWkB,GACvCwB,GAAWD,EAAgB,EAAIA,EAE7B,EAAIxC,KAAKC,GAAMuC,IAAmB,KAAO,EAAIxC,KAAKC,KAElDyC,EAAcD,EAAU,IAAOf,GAAMF,cAC3CiB,GAA6C,IAAlCtC,EAAkBjC,GAAoB,IAAMuE,EAAUA,EAEjE,IAAME,EAAiBjB,GAAMR,KAAK0B,OAAS,IACrCC,EAAe7C,KAAK8C,MAAML,EAAUE,GAE1ChB,IAAS,SAAAoB,GAAS,YACXA,EADW,CAEdtB,gBAAkD,IAAlCtB,EAAkBjC,GAAoBwE,EAAahB,GAAMF,cAAgBkB,EACzFvF,MAAOuE,GAAMR,KAAK2B,GAClBhI,KAAM,CACFiB,EAAIwF,EAAStB,KAAKgD,IAAIzB,GAAWD,EACjCvF,EAAIuF,EAAStB,KAAKiD,IAAI1B,GAAWD,QAKzCF,GAASM,GAAMR,KAAK2B,MACrB,CAACnB,GAAMF,cAAeE,GAAMJ,OAAQI,GAAMR,KAAMD,EAAkB/C,EAAWkD,KAE1E3G,GAAcqH,uBAAY,SAACoB,GAC7BvB,IAAS,SAAAoB,GAAS,YACXA,EADW,CAEd3I,YAAY,SAGjB,IAEG+I,GAAcrB,uBAAY,SAACoB,GAG7B,GAFAA,EAAME,iBAED1B,GAAMtH,WAAX,CAEA,IAAIiJ,EACe,cAAfH,EAAMI,OACND,EAAQH,EAAMK,eAAe,IAGjC,IAAMC,GAAmC,cAAfN,EAAMI,KAAuBD,EAAMI,MAAQP,EAAMO,QACtE5B,KAA2B9G,KAAO2G,GAAMJ,QACvCoC,GAAmC,cAAfR,EAAMI,KAAuBD,EAAMM,MAAQT,EAAMS,QACtE9B,KAA2B7G,IAAM0G,GAAMJ,QAEtCC,EAAUvB,KAAK4D,MAAMF,EAAkBF,GAC7CnJ,GAAakH,MACd,CAACG,GAAMtH,WAAYsH,GAAMJ,OAAQjH,GAAcwH,KAE5CgC,GAAY,SAACX,GACfvB,IAAS,SAAAoB,GAAS,YACXA,EADW,CAEd3I,YAAY,QA8CpB,OAzCA0J,qBAAU,WACNnC,IAAS,SAAAoB,GAAS,YACXA,EADW,CAEdjC,SAAS,EACTI,KAAM6B,EAAU7B,KAAK0B,OAAf,YAA4BG,EAAU7B,MAAtC,YAAkDX,EAAcF,EAAKC,IAC3EkB,cAAe9C,GAAYsD,QAAQ+B,wBAExC,CAACrC,GAAMsC,KAAM1D,EAAKD,IAErByD,qBAAU,WACN,IAAMG,EAAkB/C,EAAK0B,OACvBsB,EAAqB/C,GAAmB8C,EAAkB,EAAKA,EAAkB9C,GAOvF,GALAQ,IAAS,SAAAoB,GAAS,YACXA,EADW,CAEdxB,QAASvB,KAAKC,GAAK,EAAIF,EAAW2B,GAAMT,uBAGzCiD,GAAuBD,EAA1B,CACI,IAAMtB,EAAiB3C,KAAKmE,KAAK,IAAMF,GAEjC1C,EADUpB,EAAkBjC,GAAagG,EAAoBvB,EACxC3C,KAAKC,GAAK,IAAOF,EAAW2B,GAAMT,kBAC7D5G,GAAakH,EAnKV,KAmK0BpB,EAAkBjC,SAInD7D,IAAc0F,EAAW2B,GAAMT,kBAvKxB,KAuKkDd,EAAkBjC,MAE5E,CAACwD,GAAMF,cAAeE,GAAMT,iBAAkBE,GAAkBjD,EAAWgD,EAAK0B,SAEnFkB,qBAAU,WACN,GAAIpC,GAAMtH,WAGN,OAFAsF,OAAO0E,iBAAiBzE,EAAaG,KAAMqD,GAAa,CAACkB,SAAS,IAClE3E,OAAO0E,iBAAiBzE,EAAaE,GAAIgE,GAAW,CAACQ,SAAS,IACvD,WACH3E,OAAO4E,oBAAoB3E,EAAaG,KAAMqD,IAC9CzD,OAAO4E,oBAAoB3E,EAAaE,GAAIgE,OAGrD,CAACnC,GAAMtH,WAAY+I,KAGlB,yBAAKnH,UAAWC,YAAIvB,EAAOiG,eAAgBe,GAAMZ,SAAWpG,EAAOoG,SAAUxB,IAAKqB,IAC9E,kBAAC,EAAD,CACIxE,MAAOA,EACPgB,MAAOA,EACPe,UAAWA,EACXC,gBAAiBuD,GAAMF,cACvBpD,iBAAkBsD,GAAMD,eACxBpD,kBAAmBA,EACnBC,gBAAiBA,EACjBC,WAAYA,EACZC,aAAcA,EACdC,UAAWA,EACXC,YAAaA,GACbC,cAAe+C,GAAMH,QACrB3C,gBAAiBA,KAErB,kBAAC,EAAD,CACIxE,WAAYsH,GAAMtH,WAClBC,aAAc,CAAEyB,EAAG4F,GAAM7G,KAAKiB,EAAGC,EAAG2F,GAAM7G,KAAKkB,GAC/CzB,UAAWA,EACXG,YAAaA,KAEjB,kBAAC,EAAD,CACIoC,WAAYA,EACZC,cAAeA,EACfG,oBAAqBA,EACrBF,mBAAoBA,EACpBC,iBAAkBA,EAClBE,UAAWA,EACXC,MAAOA,EACPC,MAAK,UAAKsE,GAAMvE,aC3HjBoH,EA3GH,WACR,IAAM7J,EAASC,IAAWC,OAAO,CAC7B4J,QAAS,CACLC,OAAQ,QAGZC,GAAI,CACAD,OAAQ,iBAGZE,IAAK,CACD/G,SAAU,SACVgH,aAAc,SACdC,gBAAiB,UACjBC,QAAS,UAGbC,OAAQ,CACND,QAAS,kBAIf,OACI,yBAAK9I,UAAWC,YAAIvB,EAAO8J,UACvB,wBAAIxI,UAAWC,YAAIvB,EAAOgK,KAA1B,iEACA,yBAAK1I,UAAWC,YAAIvB,EAAOqK,SACvB,kBAAC,EAAD,CACI7G,WAAY,EACZ+C,iBAAiB,QACjBjE,iBAAiB,UAGzB,yBAAKhB,UAAWC,YAAIvB,EAAOiK,MAA3B,sGAOA,wBAAI3I,UAAWC,YAAIvB,EAAOgK,KAA1B,qCACA,yBAAK1I,UAAWC,YAAIvB,EAAOqK,SACvB,kBAAC,EAAD,CACI5H,MAAM,UACN+D,KAAM,CAAC,UAAK,UAAK,UAAK,UAAK,UAAK,UAAK,UAAK,UAAK,UAAK,WAAM,WAAM,WAAM,WAAM,WAAM,WAAM,WAAM,WAAM,WAAM,YAAO,YAAO,YAAO,YAAO,YAAO,YAAO,YAAO,YAAO,YAAO,aAAQ,aAAQ,aAAQ,aAAQ,aAAQ,aAAQ,aAAQ,aAAQ,aAAQ,eACjPC,iBAAkB,GAClBtE,WAAY,UACZvC,UAAW,UACX+D,kBAAmB,UACnBC,gBAAiB,UACjBE,aAAc,GACdD,WAAY,UACZE,UAAW,MAGnB,yBAAKzC,UAAWC,YAAIvB,EAAOiK,MAA3B,mSAcA,wBAAI3I,UAAWC,YAAIvB,EAAOgK,KAA1B,kCACA,yBAAK1I,UAAWC,YAAIvB,EAAOqK,SACvB,kBAAC,EAAD,CACI5H,MAAM,WACNyB,gBAAgB,OAChBuC,iBAAkB,EAClBhF,MAAO,IACPU,WAAY,UACZE,mBAAoB,OACpBzC,UAAW,UACX+D,kBAAmB,UACnBC,gBAAiB,UACjBE,aAAc,EACdD,WAAY,UACZE,UAAW,EACXyC,KAAM,6BAA6B8D,MAAM,OAGjD,yBAAKhJ,UAAWC,YAAIvB,EAAOiK,MAA3B,uWCrFZM,IAASC,OAAO,kBAAC,EAAD,MAAS9C,SAAS+C,eAAe,U","file":"static/js/main.7eae9db0.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Knob = (props) => {\n    const {\n        isDragging,\n        knobPosition,\n        knobColor,\n        knobRadius = 12,\n        knobSize = 36,\n        onMouseDown,\n    } = props;\n\n    const pulse_animation = {\n        \"0%\": {transform: \"scale(1)\"},\n        \"50%\": {transform: \"scale(0.8)\"},\n        \"100%\": {transform: \"scale(1)\"}\n    };\n\n    const styles = StyleSheet.create({\n        knob: {\n            position: 'absolute',\n            left: `-${knobSize/2}px`,\n            top: `-${knobSize/2}px`,\n            cursor: 'grab',\n            zIndex: 3\n        },\n\n        dragging: {\n            cursor: 'grabbing',\n        },\n\n        pause: {\n            animationPlayState: 'paused',\n        },\n\n        animation: {\n            animationDuration: '1500ms',\n            transformOrigin: '50% 50%',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-out',\n            animationName: [pulse_animation]\n        },\n    });\n\n    return (\n        <div\n            style={{transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`}}\n            className={css(styles.knob, isDragging && styles.dragging)}\n            onMouseDown={onMouseDown}\n            onTouchStart={onMouseDown}\n        >\n            <svg\n                width={`${knobSize}px`}\n                height={`${knobSize}px`}\n                viewBox={`0 0 ${knobSize} ${knobSize}`}\n            >\n                <circle\n                    className={css(styles.animation, isDragging && styles.pause)}\n                    fill={knobColor}\n                    fillOpacity=\"0.2\"\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobSize / 2}\n                />\n                <circle\n                    fill={knobColor}\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobRadius}\n                />\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\"/>\n            </svg>\n        </div>\n    );\n};\n\nexport default Knob;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Labels = (props) => {\n    const {\n        labelColor,\n        labelFontSize,\n        labelValueFontSize,\n        labelValueAppend,\n        labelVerticalOffset,\n        labelHide,\n        label,\n        value\n    } = props;\n\n    const styles = StyleSheet.create({\n        labels: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: `${labelColor}`,\n            userSelect: 'none',\n            zIndex: 1,\n        },\n\n        value: {\n            fontSize: `${labelValueFontSize}`,\n            marginBottom: `calc(${labelVerticalOffset})`,\n            position: 'relative'\n        },\n\n        appended: {\n            position: 'absolute',\n            right: '0',\n            top: 0,\n            transform: 'translate(100%, 0)'\n        },\n\n        hide: {\n            display: 'none'\n        }\n    });\n\n    return (\n        <div className={css(styles.labels, labelHide && styles.hide)}>\n            <div style={{fontSize: labelFontSize}}>{label}</div>\n            <div className={css(styles.value)}>\n                <code>{value}<span className={css(styles.appended)}>{labelValueAppend}</span></code>\n            </div>\n        </div>\n    );\n};\n\nexport default Labels;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Svg = (props) => {\n    const {\n        width,\n        label,\n        direction,\n        strokeDasharray,\n        strokeDashoffset,\n        progressColorFrom,\n        progressColorTo,\n        trackColor,\n        progressSize,\n        trackSize,\n        svgFullPath,\n        radiansOffset,\n        progressLineCap,\n    } = props;\n\n    const styles = StyleSheet.create({\n        svg: {\n            position: 'relative',\n            zIndex: 2\n        },\n\n        path: {\n            transform: `rotate(${radiansOffset}rad) ${direction === -1 && 'scale(-1, 1)'}`,\n            transformOrigin: 'center center'\n        }\n    });\n\n    return (\n        <svg\n            width={`${width}px`}\n            height={`${width}px`}\n            viewBox={`0 0 ${width} ${width}`}\n            overflow=\"visible\"\n            className={css(styles.svg)}\n        >\n            <defs>\n                <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n                    <stop offset=\"0%\" stopColor={progressColorFrom}/>\n                    <stop offset=\"100%\" stopColor={progressColorTo}/>\n                </linearGradient>\n            </defs>\n            <circle\n                strokeWidth={trackSize}\n                fill=\"none\"\n                stroke={trackColor}\n                cx={width / 2}\n                cy={width / 2}\n                r={width / 2}\n            />\n            <path\n                className={css(styles.path)}\n                ref={svgFullPath}\n                strokeDasharray={strokeDasharray}\n                strokeDashoffset={strokeDashoffset}\n                strokeWidth={progressSize}\n                strokeLinecap={progressLineCap !== 'round' ? 'butt' : 'round'}\n                fill=\"none\"\n                stroke={`url(#${label})`}\n                d={`\n                        M ${width / 2}, ${width / 2}\n                        m 0, -${width / 2}\n                        a ${width / 2},${width / 2} 0 0,1 0,${width}\n                        a -${width / 2},-${width / 2} 0 0,1 0,-${width}\n                    `}/>\n        </svg>\n    );\n};\n\nexport default Svg;\n","import React, {useState, useEffect, useCallback, useRef, memo} from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\n\nconst touchSupported = ('ontouchstart' in window);\n\nconst SLIDER_EVENT = {\n    DOWN: touchSupported ? 'touchstart' : 'mousedown',\n    UP: touchSupported ? 'touchend' : 'mouseup',\n    MOVE: touchSupported ? 'touchmove' : 'mousemove',\n};\n\nconst knobOffset = {\n    top: Math.PI / 2,\n    right: 0,\n    bottom: -Math.PI / 2,\n    left: -Math.PI\n};\n\nconst offset = 0.005;\n\nconst getSliderRotation = (number) => {\n    if(number === 0) return 1;\n    return Math.min(Math.max(number, -1), 1)\n};\n\nconst generateRange = (min, max) => {\n    let rangeOfNumbers = [];\n    for(let i = min; i <= max; i++) {\n        rangeOfNumbers.push(i);\n    }\n    return rangeOfNumbers;\n};\n\nconst styles = StyleSheet.create({\n    circularSlider: {\n        position: 'relative',\n        display: 'inline-block',\n        opacity: 0,\n        transition: 'opacity 1s ease-in'\n    },\n\n    mounted: {\n        opacity: 1\n    },\n});\n\nconst CircularSlider = memo(({\n        label = 'ANGLE',\n        width = 280,\n        direction = 1,\n        min = 0,\n        max = 360,\n        knobColor = '#4e63ea',\n        knobZeroPosition = 'top',\n        labelColor = '#272b77',\n        labelFontSize = '1rem',\n        labelValueFontSize = '4rem',\n        labelValueAppend = '',\n        labelVerticalOffset = '2rem',\n        labelHide = false,\n        progressColorFrom = '#80C3F3',\n        progressColorTo = '#4990E2',\n        progressSize = 6,\n        trackColor = '#DDDEFB',\n        trackSize = 6,\n        data = [],\n        initialDataIndex = 0,\n        progressLineCap = 'round',\n        onChange = value => {}\n    }) => {\n    const [state, setState] = useState({\n        mounted: false,\n        isDragging: false,\n        width: width,\n        radius: width / 2,\n        knobZeroPosition: knobZeroPosition,\n        label: 0,\n        data: data,\n        radians: 0,\n        knob: {\n            x: 0,\n            y: 0,\n        },\n        dashFullArray: 0,\n        dashFullOffset: 0\n    });\n\n    const circularSlider = useRef(null);\n    const svgFullPath = useRef(null);\n\n    const offsetRelativeToDocument = useCallback(() => {\n        const rect = circularSlider.current.getBoundingClientRect();\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        return {top: rect.top + scrollTop, left: rect.left + scrollLeft};\n    }, []);\n\n    const knobPosition = useCallback((radians) => {\n        const radius = state.radius;\n        const offsetRadians = radians + knobOffset[knobZeroPosition];\n        let degrees = (offsetRadians > 0 ? offsetRadians\n            :\n            ((2 * Math.PI) + offsetRadians)) * (360 / (2 * Math.PI));\n        // change direction\n        const dashOffset = (degrees / 360) * state.dashFullArray;\n        degrees = (getSliderRotation(direction) === -1 ? 360 - degrees : degrees);\n\n        const pointsInCircle = state.data.length / 361;\n        const currentPoint = Math.floor(degrees * pointsInCircle);\n\n        setState(prevState => ({\n            ...prevState,\n            dashFullOffset: getSliderRotation(direction) === -1 ? dashOffset : state.dashFullArray - dashOffset,\n            label: state.data[currentPoint],\n            knob: {\n                x: (radius * Math.cos(radians) + radius),\n                y: (radius * Math.sin(radians) + radius),\n            }\n        }));\n\n        // props callback for parent\n        onChange(state.data[currentPoint]);\n    }, [state.dashFullArray, state.radius, state.data, knobZeroPosition, direction, onChange]);\n\n    const onMouseDown = useCallback((event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: true\n        }));\n\n    }, []);\n\n    const onMouseMove = useCallback((event) => {\n        event.preventDefault();\n\n        if (!state.isDragging) return;\n\n        let touch;\n        if (event.type === 'touchmove') {\n            touch = event.changedTouches[0];\n        }\n\n        const mouseXFromCenter = (event.type === 'touchmove' ? touch.pageX : event.pageX) -\n            (offsetRelativeToDocument().left + state.radius);\n        const mouseYFromCenter = (event.type === 'touchmove' ? touch.pageY : event.pageY) -\n            (offsetRelativeToDocument().top + state.radius);\n\n        const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n        knobPosition(radians);\n    }, [state.isDragging, state.radius, knobPosition, offsetRelativeToDocument]);\n\n    const onMouseUp = (event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: false\n        }));\n    };\n\n    // Get svg path length on mount\n    useEffect(() => {\n        setState(prevState => ({\n            ...prevState,\n            mounted: true,\n            data: prevState.data.length ? [...prevState.data] : [...generateRange(min, max)],\n            dashFullArray: svgFullPath.current.getTotalLength(),\n        }));\n    }, [state.date, max, min]);\n\n    useEffect(() => {\n        const dataArrayLength = data.length;\n        const knobPositionIndex = (initialDataIndex > dataArrayLength - 1) ? dataArrayLength : initialDataIndex;\n\n        setState(prevState => ({\n            ...prevState,\n            radians: Math.PI / 2 - knobOffset[state.knobZeroPosition],\n        }));\n\n        if(knobPositionIndex && !!dataArrayLength) {\n            const pointsInCircle = Math.ceil(360 / dataArrayLength);\n            const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\n            const radians = (degrees * Math.PI / 180) - knobOffset[state.knobZeroPosition];\n            knobPosition(radians+(offset*getSliderRotation(direction)));\n            return;\n        }\n\n        knobPosition(-knobOffset[state.knobZeroPosition]+(offset*getSliderRotation(direction)));\n        // eslint-disable-next-line\n    }, [state.dashFullArray, state.knobZeroPosition, initialDataIndex, direction, data.length]);\n\n    useEffect(() => {\n        if (state.isDragging) {\n            window.addEventListener(SLIDER_EVENT.MOVE, onMouseMove, {passive: false});\n            window.addEventListener(SLIDER_EVENT.UP, onMouseUp, {passive: false});\n            return () => {\n                window.removeEventListener(SLIDER_EVENT.MOVE, onMouseMove);\n                window.removeEventListener(SLIDER_EVENT.UP, onMouseUp);\n            }\n        }\n    }, [state.isDragging, onMouseMove]);\n\n    return (\n        <div className={css(styles.circularSlider, state.mounted && styles.mounted)} ref={circularSlider}>\n            <Svg\n                width={width}\n                label={label}\n                direction={direction}\n                strokeDasharray={state.dashFullArray}\n                strokeDashoffset={state.dashFullOffset}\n                progressColorFrom={progressColorFrom}\n                progressColorTo={progressColorTo}\n                trackColor={trackColor}\n                progressSize={progressSize}\n                trackSize={trackSize}\n                svgFullPath={svgFullPath}\n                radiansOffset={state.radians}\n                progressLineCap={progressLineCap}\n            />\n            <Knob\n                isDragging={state.isDragging}\n                knobPosition={{ x: state.knob.x, y: state.knob.y }}\n                knobColor={knobColor}\n                onMouseDown={onMouseDown}\n            />\n            <Labels\n                labelColor={labelColor}\n                labelFontSize={labelFontSize}\n                labelVerticalOffset={labelVerticalOffset}\n                labelValueFontSize={labelValueFontSize}\n                labelValueAppend={labelValueAppend}\n                labelHide={labelHide}\n                label={label}\n                value={`${state.label}`}\n            />\n        </div>\n    );\n});\n\nexport default CircularSlider;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport CircularSlider from \"./CircularSlider\";\n\nconst App = () => {\n    const styles = StyleSheet.create({\n        wrapper: {\n            margin: '2rem'\n        },\n\n        h3: {\n            margin: '3rem 0 2rem 0',\n        },\n\n        pre: {\n            fontSize: '0.9rem',\n            borderRadius: '0.3rem',\n            backgroundColor: '#eeeeee',\n            padding: '0.5rem',\n        },\n\n        slider: {\n          padding: '0 0 0.5rem 0'\n        }\n    });\n\n    return (\n        <div className={css(styles.wrapper)}>\n            <h3 className={css(styles.h3)}>Anticlockwise rotation with the knob positioned to the right:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    direction={-1}\n                    knobZeroPosition=\"right\"\n                    labelValueAppend=\"°\"\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n                {`<CircularSlider\n    direction={-1}\n    knobZeroPosition=\"right\"\n    labelValueAppend=\"°\"\n/>`}\n            </pre>\n            <h3 className={css(styles.h3)}>Data array with an initial value:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    label=\"savings\"\n                    data={[\"1€\",\"2€\",\"3€\",\"4€\",\"5€\",\"6€\",\"7€\",\"8€\",\"9€\",\"10€\",\"20€\",\"30€\",\"40€\",\"50€\",\"60€\",\"70€\",\"80€\",\"90€\",\"100€\",\"200€\",\"300€\",\"400€\",\"500€\",\"600€\",\"700€\",\"800€\",\"900€\",\"1000€\",\"2000€\",\"3000€\",\"4000€\",\"5000€\",\"6000€\",\"7000€\",\"8000€\",\"9000€\",\"10000€\"]}\n                    initialDataIndex={10}\n                    labelColor={\"#005a58\"}\n                    knobColor={\"#005a58\"}\n                    progressColorFrom={\"#00bfbd\"}\n                    progressColorTo={\"#009c9a\"}\n                    progressSize={24}\n                    trackColor={\"#eeeeee\"}\n                    trackSize={24}\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n                {`<CircularSlider\n    label=\"savings\"\n    data=[\"1€\",\"2€\",...]\n    initialDataIndex={10}\n    labelColor=\"#005a58\"\n    knobColor=\"#005a58\"\n    progressColorFrom=\"#00bfbd\"\n    progressColorTo=\"#005a58\"\n    progressSize={24}\n    trackColor=\"#eeeeee\"\n    trackSize={24}\n/>`}\n            </pre>\n            <h3 className={css(styles.h3)}>Some props with flat line cap:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    label=\"Alphabet\"\n                    progressLineCap=\"flat\"\n                    initialDataIndex={1}\n                    width={250}\n                    labelColor={\"#212121\"}\n                    labelValueFontSize={\"6rem\"}\n                    knobColor={\"#212121\"}\n                    progressColorFrom={\"#ff8500\"}\n                    progressColorTo={\"#a15400\"}\n                    progressSize={8}\n                    trackColor={\"#eeeeee\"}\n                    trackSize={4}\n                    data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n                {`<CircularSlider\n    width={200}\n    progressLineCap=\"flat\"\n    initialDataIndex={1}\n    label=\"Alphabet\"\n    data=[\"A\",\"B\",\"C\",...]\n    labelColor=\"#212121\"\n    labelValueFontSize=\"6rem\"\n    knobColor=\"#212121\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n/>`}\n            </pre>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}