{"version":3,"sources":["Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["Knob","props","isDragging","knobPosition","knobColor","knobRadius","knobSize","onMouseDown","styles","StyleSheet","create","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","animationDuration","transformOrigin","animationIterationCount","animationTimingFunction","animationName","transform","style","x","y","className","css","onTouchStart","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","label","value","labels","display","flexDirection","justifyContent","alignItems","color","fontSize","marginBottom","description","textTransform","Svg","strokeDasharray","strokeDashoffset","progressColors","trackColor","progressSize","trackSize","svgFullPath","svg","overflow","id","x1","x2","offset","stopColor","from","to","strokeWidth","ref","strokeLinecap","d","touchSupported","window","SLIDER_EVENT","DOWN","UP","MOVE","CircularSlider","onChange","useState","mounted","radius","degrees","radians","dashFullArray","dashFullOffset","state","setState","circularSlider","useRef","offsetRelativeToDocument","useCallback","rect","current","getBoundingClientRect","scrollLeft","pageXOffset","document","documentElement","scrollTop","pageYOffset","offsetRadians","Math","PI","dashOffset","round","prevState","cos","sin","event","onMouseMove","preventDefault","touch","type","changedTouches","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","onMouseUp","useEffect","pathLength","getTotalLength","addEventListener","passive","removeEventListener","opacity","transition","App","wrapper","marginTop","textAlign","deg","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b0bf7928.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Knob = (props) => {\n    const {\n        isDragging,\n        knobPosition,\n        knobColor,\n        knobRadius = 12,\n        knobSize = 36,\n        onMouseDown,\n    } = props;\n\n    const pulse_animation = {\n        \"0%\": {transform: \"scale(1)\"},\n        \"50%\": {transform: \"scale(0.8)\"},\n        \"100%\": {transform: \"scale(1)\"}\n    };\n\n    const styles = StyleSheet.create({\n        knob: {\n            position: 'absolute',\n            left: `-${knobSize/2}px`,\n            top: `-${knobSize/2}px`,\n            cursor: 'grab',\n            zIndex: 3\n        },\n\n        dragging: {\n            cursor: 'grabbing',\n        },\n\n        pause: {\n            animationPlayState: 'paused',\n        },\n\n        animation: {\n            animationDuration: '1500ms',\n            transformOrigin: '50% 50%',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-out',\n            animationName: [pulse_animation]\n        },\n    });\n\n    return (\n        <div\n            style={{transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`}}\n            className={css(styles.knob, isDragging && styles.dragging)}\n            onMouseDown={onMouseDown}\n            onTouchStart={onMouseDown}\n        >\n            <svg\n                width={`${knobSize}px`}\n                height={`${knobSize}px`}\n                viewBox={`0 0 ${knobSize} ${knobSize}`}\n            >\n                <circle\n                    className={css(styles.animation, isDragging && styles.pause)}\n                    fill={knobColor}\n                    fillOpacity=\"0.2\"\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobSize / 2}\n                />\n                <circle\n                    fill={knobColor}\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobRadius}\n                />\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\"/>\n            </svg>\n        </div>\n    );\n};\n\nexport default Knob;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Labels = (props) => {\n    const {\n        labelColor,\n        label,\n        value\n    } = props;\n\n    const styles = StyleSheet.create({\n        labels: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: `${labelColor}`,\n            zIndex: 1,\n        },\n\n        value: {\n            fontSize: '4rem',\n            marginBottom: '2rem'\n        },\n\n        description: {\n            fontSize: '1rem',\n            textTransform: 'uppercase'\n        }\n    });\n\n    return (\n        <div className={css(styles.labels)}>\n            <div className={css(styles.description)}>{label}</div>\n            <div className={css(styles.value)}>\n                <code>{value}</code>\n            </div>\n        </div>\n    );\n};\n\nexport default Labels;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Svg = (props) => {\n    const {\n        width,\n        strokeDasharray,\n        strokeDashoffset,\n        progressColors,\n        trackColor,\n        progressSize,\n        trackSize,\n        svgFullPath,\n    } = props;\n\n    const styles = StyleSheet.create({\n        svg: {\n            position: 'relative',\n            zIndex: 2\n        },\n    });\n\n    return (\n        <svg\n            width={`${width}px`}\n            height={`${width}px`}\n            viewBox={`0 0 ${width} ${width}`}\n            overflow=\"visible\"\n            className={css(styles.svg)}\n        >\n            <defs>\n                <linearGradient id=\"gradient\" x1=\"100%\" x2=\"0%\">\n                    <stop offset=\"0%\" stopColor={progressColors.from}/>\n                    <stop offset=\"100%\" stopColor={progressColors.to}/>\n                </linearGradient>\n            </defs>\n            <circle\n                strokeWidth={trackSize}\n                fill=\"none\"\n                stroke={trackColor}\n                cx={width / 2}\n                cy={width / 2}\n                r={width / 2}\n            />\n            <path\n                ref={svgFullPath}\n                strokeDasharray={strokeDasharray}\n                strokeDashoffset={strokeDashoffset}\n                strokeWidth={progressSize}\n                strokeLinecap=\"round\"\n                fill=\"none\"\n                stroke=\"url(#gradient)\"\n                d={`\n                        M ${width / 2}, ${width / 2}\n                        m 0, -${width / 2}\n                        a ${width / 2},${width / 2} 0 0,1 0,${width}\n                        a -${width / 2},-${width / 2} 0 0,1 0,-${width}\n                    `}/>\n        </svg>\n    );\n};\n\nexport default Svg;\n","import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\n\nconst touchSupported = ('ontouchstart' in window);\n\nconst SLIDER_EVENT = {\n    DOWN: touchSupported ? 'touchstart' : 'mousedown',\n    UP: touchSupported ? 'touchend' : 'mouseup',\n    MOVE: touchSupported ? 'touchmove' : 'mousemove',\n};\n\nconst CircularSlider = (props) => {\n    const {\n        label = 'Degrees°',\n        width = 280,\n        knobColor = '#4e63ea',\n        labelColor = '#272b77',\n        progressColors = {from: '#80C3F3', to: '#4990E2'},\n        trackColor = '#DDDEFB',\n        progressSize = 6,\n        trackSize = 6,\n        onChange = value => {}\n    } = props;\n    const [state, setState] = useState({\n        mounted: false,\n        isDragging: false,\n        width: width,\n        radius: width / 2,\n        degrees: 0,\n        knob: {\n            radians: 0,\n            x: 0,\n            y: 0,\n        },\n        dashFullArray: 0,\n        dashFullOffset: 0\n    });\n\n    let circularSlider = useRef(null);\n    let svgFullPath = useRef(null);\n\n    const offsetRelativeToDocument = useCallback(() => {\n        const rect = circularSlider.current.getBoundingClientRect();\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        return {top: rect.top + scrollTop, left: rect.left + scrollLeft};\n    }, []);\n\n    const knobPosition = useCallback((radians) => {\n        const radius = state.radius;\n        const offsetRadians = radians + 1.5708; // offset by 90 degrees\n        const degrees = (offsetRadians > 0 ? offsetRadians\n            :\n            ((2 * Math.PI) + offsetRadians)) * (360 / (2 * Math.PI));\n\n        const dashOffset = state.dashFullArray - ((degrees / 360) * state.dashFullArray);\n\n        // props callback for parent\n        onChange(Math.round(degrees));\n\n        setState(prevState => ({\n            ...prevState,\n            dashFullOffset: dashOffset,\n            degrees: Math.round(degrees),\n            knob: {\n                radians: radians,\n                x: (radius * Math.cos(radians) + radius),\n                y: (radius * Math.sin(radians) + radius),\n            }\n        }));\n    }, [state.dashFullArray, state.radius, onChange]);\n\n    const onMouseDown = useCallback((event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: true\n        }));\n\n    }, []);\n\n    const onMouseMove = useCallback((event) => {\n        event.preventDefault();\n\n        if (!state.isDragging) return;\n\n        let touch;\n        if (event.type === 'touchmove') {\n            touch = event.changedTouches[0];\n        }\n\n        const mouseXFromCenter = (event.type === 'touchmove' ? touch.pageX : event.pageX) -\n            (offsetRelativeToDocument().left + state.radius);\n        const mouseYFromCenter = (event.type === 'touchmove' ? touch.pageY : event.pageY) -\n            (offsetRelativeToDocument().top + state.radius);\n\n        const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n        knobPosition(radians);\n    }, [state.isDragging, state.radius, knobPosition, offsetRelativeToDocument]);\n\n    const onMouseUp = (event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: false\n        }));\n    };\n\n    useEffect(() => {\n        const pathLength = svgFullPath.current.getTotalLength();\n\n        setState(prevState => ({\n            ...prevState,\n            mounted: true,\n            dashFullArray: pathLength,\n            dashFullOffset: pathLength,\n            radius: state.radius,\n            knob: {\n                radians: 0,\n                x: state.radius,\n                y: 0,\n            },\n        }));\n    }, [offsetRelativeToDocument, state.radius]);\n\n    useEffect(() => {\n        if (state.isDragging) {\n            window.addEventListener(SLIDER_EVENT.MOVE, onMouseMove, {passive: false});\n            window.addEventListener(SLIDER_EVENT.UP, onMouseUp, {passive: false});\n            return () => {\n                window.removeEventListener(SLIDER_EVENT.MOVE, onMouseMove);\n                window.removeEventListener(SLIDER_EVENT.UP, onMouseUp);\n            }\n        }\n    }, [state.isDragging, onMouseMove]);\n\n    const styles = StyleSheet.create({\n        circularSlider: {\n            position: 'relative',\n            display: 'inline-block',\n            opacity: 0,\n            transition: 'opacity 1s ease-in'\n        },\n\n        mounted: {\n            opacity: 1\n        },\n    });\n\n    return (\n        <div className={css(styles.circularSlider, state.mounted && styles.mounted)} ref={circularSlider}>\n            <Svg\n                width={width}\n                strokeDasharray={state.dashFullArray}\n                strokeDashoffset={state.dashFullOffset}\n                progressColors={progressColors}\n                trackColor={trackColor}\n                progressSize={progressSize}\n                trackSize={trackSize}\n                svgFullPath={svgFullPath}\n            />\n            <Knob\n                isDragging={state.isDragging}\n                knobPosition={{ x: state.knob.x, y: state.knob.y }}\n                knobColor={knobColor}\n                onMouseDown={onMouseDown}\n            />\n            <Labels\n                labelColor={labelColor}\n                label={label}\n                value={`${state.degrees}`}\n            />\n        </div>\n    );\n};\n\nexport default CircularSlider;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport CircularSlider from \"./CircularSlider\";\n\nconst App = () => {\n    const styles = StyleSheet.create({\n        wrapper: {\n            marginTop: '4rem',\n            textAlign: 'center'\n        }\n    });\n\n    const onChange = (deg) => {\n      console.log(deg);\n    };\n\n    return (\n        <div className={css(styles.wrapper)}>\n            <CircularSlider\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}