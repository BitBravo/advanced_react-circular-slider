{"version":3,"sources":["Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["Knob","isDragging","knobPosition","knobColor","knobRadius","knobSize","onMouseDown","styles","StyleSheet","create","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","animationDuration","transformOrigin","animationIterationCount","animationTimingFunction","animationName","transform","style","x","y","className","css","onTouchStart","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelFontSize","valueFontSize","appendToValue","verticalOffset","labelHide","label","value","labels","display","flexDirection","justifyContent","alignItems","color","userSelect","fontSize","marginBottom","appended","right","hide","Svg","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","progressSize","trackSize","svgFullPath","radiansOffset","progressLineCap","svg","path","overflow","id","x1","x2","offset","stopColor","strokeWidth","ref","strokeLinecap","d","touchSupported","window","SLIDER_EVENT","DOWN","UP","MOVE","knobOffset","Math","PI","bottom","getSliderRotation","number","min","max","generateRange","rangeOfNumbers","i","push","offsetRelativeToDocument","rect","current","getBoundingClientRect","scrollLeft","pageXOffset","document","documentElement","scrollTop","pageYOffset","circularSlider","opacity","transition","mounted","CircularSlider","memo","hideLabelValue","data","dataIndex","onChange","useState","radius","radians","dashFullArray","dashFullOffset","state","setState","useRef","setKnobPosition","useCallback","offsetRadians","degrees","dashOffset","pointsInCircle","length","currentPoint","floor","prevState","cos","sin","onMouseUp","event","onMouseMove","preventDefault","touch","type","changedTouches","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","useEffect","getTotalLength","date","dataArrayLength","knobPositionIndex","ceil","addEventListener","passive","removeEventListener","App","wrapper","margin","h3","pre","borderRadius","backgroundColor","padding","slider","split","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6c2a5a90.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport PropTypes from \"prop-types\";\n\nconst Knob = ({\n          isDragging,\n          knobPosition,\n          knobColor,\n          knobRadius = 12,\n          knobSize = 36,\n          onMouseDown,\n      }) => {\n\n    const pulse_animation = {\n        \"0%\": {transform: \"scale(1)\"},\n        \"50%\": {transform: \"scale(0.8)\"},\n        \"100%\": {transform: \"scale(1)\"}\n    };\n\n    const styles = StyleSheet.create({\n        knob: {\n            position: 'absolute',\n            left: `-${knobSize/2}px`,\n            top: `-${knobSize/2}px`,\n            cursor: 'grab',\n            zIndex: 3\n        },\n\n        dragging: {\n            cursor: 'grabbing',\n        },\n\n        pause: {\n            animationPlayState: 'paused',\n        },\n\n        animation: {\n            animationDuration: '1500ms',\n            transformOrigin: '50% 50%',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-out',\n            animationName: [pulse_animation]\n        },\n    });\n\n    return (\n        <div\n            style={{transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`}}\n            className={css(styles.knob, isDragging && styles.dragging)}\n            onMouseDown={onMouseDown}\n            onTouchStart={onMouseDown}\n        >\n            <svg\n                width={`${knobSize}px`}\n                height={`${knobSize}px`}\n                viewBox={`0 0 ${knobSize} ${knobSize}`}\n            >\n                <circle\n                    className={css(styles.animation, isDragging && styles.pause)}\n                    fill={knobColor}\n                    fillOpacity=\"0.2\"\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobSize / 2}\n                />\n                <circle\n                    fill={knobColor}\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobRadius}\n                />\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\"/>\n            </svg>\n        </div>\n    );\n};\n\nKnob.propTypes = {\n    isDragging: PropTypes.bool,\n    knobPosition: PropTypes.object,\n    knobColor: PropTypes.string,\n    knobRadius: PropTypes.number,\n    knobSize: PropTypes.number,\n    onMouseDown: PropTypes.func,\n};\n\nexport default Knob;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport PropTypes from \"prop-types\";\n\nconst Labels = ({\n        labelColor,\n        labelFontSize,\n        valueFontSize,\n        appendToValue,\n        verticalOffset,\n        labelHide,\n        label,\n        value\n    }) => {\n    const styles = StyleSheet.create({\n        labels: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: `${labelColor}`,\n            userSelect: 'none',\n            zIndex: 1,\n        },\n\n        value: {\n            fontSize: `${valueFontSize}`,\n            marginBottom: `calc(${verticalOffset})`,\n            position: 'relative'\n        },\n\n        appended: {\n            position: 'absolute',\n            right: '0',\n            top: 0,\n            transform: 'translate(100%, 0)'\n        },\n\n        hide: {\n            display: 'none'\n        }\n    });\n\n    return (\n        <div className={css(styles.labels, labelHide && styles.hide)}>\n            <div style={{fontSize: labelFontSize}}>{label}</div>\n            <div className={css(styles.value)}>\n                <code>{value}<span className={css(styles.appended)}>{appendToValue}</span></code>\n            </div>\n        </div>\n    );\n};\n\nLabels.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    labelColor: PropTypes.string,\n    labelFontSize: PropTypes.string,\n    valueFontSize: PropTypes.string,\n    appendToValue: PropTypes.string,\n    verticalOffset: PropTypes.string,\n    hideLabelValue: PropTypes.bool,\n};\n\nexport default Labels;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport PropTypes from \"prop-types\";\n\nconst Svg = ({\n         width,\n         label,\n         direction,\n         strokeDasharray,\n         strokeDashoffset,\n         progressColorFrom,\n         progressColorTo,\n         trackColor,\n         progressSize,\n         trackSize,\n         svgFullPath,\n         radiansOffset,\n         progressLineCap,\n     }) => {\n\n    const styles = StyleSheet.create({\n        svg: {\n            position: 'relative',\n            zIndex: 2\n        },\n\n        path: {\n            transform: `rotate(${radiansOffset}rad) ${direction === -1 && 'scale(-1, 1)'}`,\n            transformOrigin: 'center center'\n        }\n    });\n\n    return (\n        <svg\n            width={`${width}px`}\n            height={`${width}px`}\n            viewBox={`0 0 ${width} ${width}`}\n            overflow=\"visible\"\n            className={css(styles.svg)}\n        >\n            <defs>\n                <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n                    <stop offset=\"0%\" stopColor={progressColorFrom}/>\n                    <stop offset=\"100%\" stopColor={progressColorTo}/>\n                </linearGradient>\n            </defs>\n            <circle\n                strokeWidth={trackSize}\n                fill=\"none\"\n                stroke={trackColor}\n                cx={width / 2}\n                cy={width / 2}\n                r={width / 2}\n            />\n            <path\n                className={css(styles.path)}\n                ref={svgFullPath}\n                strokeDasharray={strokeDasharray}\n                strokeDashoffset={strokeDashoffset}\n                strokeWidth={progressSize}\n                strokeLinecap={progressLineCap !== 'round' ? 'butt' : 'round'}\n                fill=\"none\"\n                stroke={`url(#${label})`}\n                d={`\n                        M ${width / 2}, ${width / 2}\n                        m 0, -${width / 2}\n                        a ${width / 2},${width / 2} 0 0,1 0,${width}\n                        a -${width / 2},-${width / 2} 0 0,1 0,-${width}\n                    `}/>\n        </svg>\n    );\n};\n\nSvg.propTypes = {\n    width: PropTypes.number,\n    label: PropTypes.string,\n    direction: PropTypes.number,\n    svgFullPath: PropTypes.object,\n    strokeDasharray: PropTypes.number,\n    strokeDashoffset: PropTypes.number,\n    progressColorFrom: PropTypes.string,\n    progressColorTo: PropTypes.string,\n    progressLineCap: PropTypes.string,\n    progressSize: PropTypes.number,\n    trackColor: PropTypes.string,\n    trackSize: PropTypes.number,\n    radiansOffset: PropTypes.number,\n};\n\nexport default Svg;\n","import React, {useState, useEffect, useCallback, useRef, memo} from 'react';\nimport PropTypes from \"prop-types\";\nimport {StyleSheet, css} from 'aphrodite';\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\n\nconst touchSupported = ('ontouchstart' in window);\nconst SLIDER_EVENT = {\n    DOWN: touchSupported ? 'touchstart' : 'mousedown',\n    UP: touchSupported ? 'touchend' : 'mouseup',\n    MOVE: touchSupported ? 'touchmove' : 'mousemove',\n};\n\nconst offset = 0.005;\nconst knobOffset = {\n    top: Math.PI / 2,\n    right: 0,\n    bottom: -Math.PI / 2,\n    left: -Math.PI\n};\n\nconst getSliderRotation = (number) => {\n    if(number === 0) return 1;\n    return Math.min(Math.max(number, -1), 1)\n};\n\nconst generateRange = (min, max) => {\n    let rangeOfNumbers = [];\n    for(let i = min; i <= max; i++) {\n        rangeOfNumbers.push(i);\n    }\n    return rangeOfNumbers;\n};\n\nconst offsetRelativeToDocument = (ref) => {\n    const rect = ref.current.getBoundingClientRect();\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    return {top: rect.top + scrollTop, left: rect.left + scrollLeft};\n};\n\nconst styles = StyleSheet.create({\n    circularSlider: {\n        position: 'relative',\n        display: 'inline-block',\n        opacity: 0,\n        transition: 'opacity 1s ease-in'\n    },\n\n    mounted: {\n        opacity: 1\n    },\n});\n\nconst CircularSlider = memo(({\n        label = 'ANGLE',\n        width = 280,\n        direction = 1,\n        min = 0,\n        max = 360,\n        knobColor = '#4e63ea',\n        knobPosition = 'top',\n        labelColor = '#272b77',\n        labelFontSize = '1rem',\n        valueFontSize = '4rem',\n        appendToValue = '',\n        verticalOffset = '2rem',\n        hideLabelValue = false,\n        progressColorFrom = '#80C3F3',\n        progressColorTo = '#4990E2',\n        progressSize = 6,\n        trackColor = '#DDDEFB',\n        trackSize = 6,\n        data = [],\n        dataIndex = 0,\n        progressLineCap = 'round',\n        onChange = value => {}\n    }) => {\n    const [state, setState] = useState({\n        mounted: false,\n        isDragging: false,\n        width: width,\n        radius: width / 2,\n        knobPosition: knobPosition,\n        label: 0,\n        data: data,\n        radians: 0,\n        knob: {\n            x: 0,\n            y: 0,\n        },\n        dashFullArray: 0,\n        dashFullOffset: 0\n    });\n\n    const circularSlider = useRef(null);\n    const svgFullPath = useRef(null);\n\n    const setKnobPosition = useCallback((radians) => {\n        const radius = state.radius;\n        const offsetRadians = radians + knobOffset[knobPosition];\n        let degrees = (offsetRadians > 0 ? offsetRadians\n            :\n            ((2 * Math.PI) + offsetRadians)) * (360 / (2 * Math.PI));\n        // change direction\n        const dashOffset = (degrees / 360) * state.dashFullArray;\n        degrees = (getSliderRotation(direction) === -1 ? 360 - degrees : degrees);\n\n        const pointsInCircle = state.data.length / 361;\n        const currentPoint = Math.floor(degrees * pointsInCircle);\n\n        if(state.data[currentPoint] !== state.label) {\n            // props callback for parent\n            onChange(state.data[currentPoint]);\n        }\n\n        setState(prevState => ({\n            ...prevState,\n            dashFullOffset: getSliderRotation(direction) === -1 ? dashOffset : state.dashFullArray - dashOffset,\n            label: state.data[currentPoint],\n            knob: {\n                x: (radius * Math.cos(radians) + radius),\n                y: (radius * Math.sin(radians) + radius),\n            }\n        }));\n    }, [state.dashFullArray, state.radius, state.data, state.label, knobPosition, direction, onChange]);\n\n    const onMouseDown = (event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: true\n        }));\n    };\n\n    const onMouseUp = (event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: false\n        }));\n    };\n\n    const onMouseMove = useCallback((event) => {\n        event.preventDefault();\n\n        if (!state.isDragging) return;\n\n        let touch;\n        if (event.type === 'touchmove') {\n            touch = event.changedTouches[0];\n        }\n\n        const mouseXFromCenter = (event.type === 'touchmove' ? touch.pageX : event.pageX) -\n            (offsetRelativeToDocument(circularSlider).left + state.radius);\n        const mouseYFromCenter = (event.type === 'touchmove' ? touch.pageY : event.pageY) -\n            (offsetRelativeToDocument(circularSlider).top + state.radius);\n\n        const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n        setKnobPosition(radians);\n    }, [state.isDragging, state.radius, setKnobPosition]);\n\n    // Get svg path length on mount\n    useEffect(() => {\n        setState(prevState => ({\n            ...prevState,\n            mounted: true,\n            data: prevState.data.length ? [...prevState.data] : [...generateRange(min, max)],\n            dashFullArray: svgFullPath.current.getTotalLength(),\n        }));\n    }, [state.date, max, min]);\n\n    useEffect(() => {\n        const dataArrayLength = data.length;\n        const knobPositionIndex = (dataIndex > dataArrayLength - 1) ? dataArrayLength - 1 : dataIndex;\n\n        setState(prevState => ({\n            ...prevState,\n            radians: Math.PI / 2 - knobOffset[state.knobPosition],\n        }));\n\n        if(knobPositionIndex && !!dataArrayLength) {\n            const pointsInCircle = Math.ceil(360 / dataArrayLength);\n            const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\n            const radians = (degrees * Math.PI / 180) - knobOffset[state.knobPosition];\n\n            return setKnobPosition(radians+(offset*getSliderRotation(direction)));\n        }\n\n        setKnobPosition(-knobOffset[state.knobPosition]+(offset*getSliderRotation(direction)));\n        // eslint-disable-next-line\n    }, [state.dashFullArray, state.knobPosition, dataIndex, direction, data.length]);\n\n    useEffect(() => {\n        if (state.isDragging) {\n            window.addEventListener(SLIDER_EVENT.MOVE, onMouseMove, {passive: false});\n            window.addEventListener(SLIDER_EVENT.UP, onMouseUp, {passive: false});\n            return () => {\n                window.removeEventListener(SLIDER_EVENT.MOVE, onMouseMove);\n                window.removeEventListener(SLIDER_EVENT.UP, onMouseUp);\n            }\n        }\n    }, [state.isDragging, onMouseMove]);\n\n    return (\n        <div className={css(styles.circularSlider, state.mounted && styles.mounted)} ref={circularSlider}>\n            <Svg\n                width={width}\n                label={label}\n                direction={direction}\n                strokeDasharray={state.dashFullArray}\n                strokeDashoffset={state.dashFullOffset}\n                svgFullPath={svgFullPath}\n                progressSize={progressSize}\n                progressColorFrom={progressColorFrom}\n                progressColorTo={progressColorTo}\n                progressLineCap={progressLineCap}\n                trackColor={trackColor}\n                trackSize={trackSize}\n                radiansOffset={state.radians}\n            />\n            <Knob\n                isDragging={state.isDragging}\n                knobPosition={{ x: state.knob.x, y: state.knob.y }}\n                knobColor={knobColor}\n                onMouseDown={onMouseDown}\n            />\n            <Labels\n                label={label}\n                labelColor={labelColor}\n                labelFontSize={labelFontSize}\n                verticalOffset={verticalOffset}\n                valueFontSize={valueFontSize}\n                appendToValue={appendToValue}\n                hideLabelValue={hideLabelValue}\n                value={`${state.label}`}\n            />\n        </div>\n    );\n});\n\nCircularSlider.propTypes = {\n    label: PropTypes.string,\n    width: PropTypes.number,\n    direction: PropTypes.number,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    knobColor: PropTypes.string,\n    knobPosition: PropTypes.string,\n    labelColor: PropTypes.string,\n    labelFontSize: PropTypes.string,\n    valueFontSize: PropTypes.string,\n    appendToValue: PropTypes.string,\n    verticalOffset: PropTypes.string,\n    hideLabelValue: PropTypes.bool,\n    progressLineCap: PropTypes.string,\n    progressColorFrom: PropTypes.string,\n    progressColorTo: PropTypes.string,\n    progressSize: PropTypes.number,\n    trackColor: PropTypes.string,\n    trackSize: PropTypes.number,\n    data: PropTypes.array,\n    dataIndex: PropTypes.number,\n    onChange: PropTypes.func\n};\n\nexport default CircularSlider;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport CircularSlider from \"./CircularSlider\";\n\nconst App = () => {\n    const styles = StyleSheet.create({\n        wrapper: {\n            margin: '2rem'\n        },\n\n        h3: {\n            margin: '3rem 0 2rem 0',\n        },\n\n        pre: {\n            fontSize: '0.9rem',\n            borderRadius: '0.3rem',\n            backgroundColor: '#eeeeee',\n            padding: '0.5rem',\n        },\n\n        slider: {\n          padding: '0 0 0.5rem 0'\n        }\n    });\n\n    return (\n        <div className={css(styles.wrapper)}>\n            <h3 className={css(styles.h3)}>Anticlockwise rotation with the knob positioned to the right and \"°\" appended to the value:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    direction={-1}\n                    knobPosition=\"right\"\n                    appendToValue=\"°\"\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n{`<CircularSlider\n    min={0}\n    max={360}\n    direction={-1}\n    knobPosition=\"right\"\n    appendToValue=\"°\"\n/>`}\n            </pre>\n            <h3 className={css(styles.h3)}>Data array with an initial value from the array at index 10:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    label=\"savings\"\n                    data={[\"1€\",\"2€\",\"3€\",\"4€\",\"5€\",\"6€\",\"7€\",\"8€\",\"9€\",\"10€\",\"20€\",\"30€\",\"40€\",\"50€\",\"60€\",\"70€\",\"80€\",\"90€\",\"100€\",\"200€\",\"300€\",\"400€\",\"500€\",\"600€\",\"700€\",\"800€\",\"900€\",\"1000€\",\"2000€\",\"3000€\",\"4000€\",\"5000€\",\"6000€\",\"7000€\",\"8000€\",\"9000€\",\"10000€\"]}\n                    dataIndex={10}\n                    labelColor={\"#005a58\"}\n                    knobColor={\"#005a58\"}\n                    progressColorFrom={\"#00bfbd\"}\n                    progressColorTo={\"#009c9a\"}\n                    progressSize={24}\n                    trackColor={\"#eeeeee\"}\n                    trackSize={24}\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n{`<CircularSlider\n    label=\"savings\"\n    data=[\"1€\",\"2€\"]\n    dataIndex={10}\n    labelColor=\"#005a58\"\n    knobColor=\"#005a58\"\n    progressColorFrom=\"#00bfbd\"\n    progressColorTo=\"#005a58\"\n    progressSize={24}\n    trackColor=\"#eeeeee\"\n    trackSize={24}\n/>`}\n            </pre>\n            <h3 className={css(styles.h3)}>A flat line cap with the track size being smaller than the progress track size:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    label=\"Alphabet\"\n                    progressLineCap=\"flat\"\n                    dataIndex={1}\n                    width={250}\n                    labelColor={\"#212121\"}\n                    valueFontSize={\"6rem\"}\n                    verticalOffset={\"1rem\"}\n                    knobColor={\"#212121\"}\n                    progressColorFrom={\"#ff8500\"}\n                    progressColorTo={\"#a15400\"}\n                    progressSize={8}\n                    trackColor={\"#eeeeee\"}\n                    trackSize={4}\n                    data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n{`<CircularSlider\n    width={200}\n    progressLineCap=\"flat\"\n    dataIndex={1}\n    label=\"Alphabet\"\n    data=[\"A\",\"B\",\"C\"]\n    labelColor=\"#212121\"\n    valueFontSize=\"6rem\"\n    verticalOffset=\"1rem\"\n    knobColor=\"#212121\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n/>`}\n            </pre>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}