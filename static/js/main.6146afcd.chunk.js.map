{"version":3,"sources":["redux/reducer.js","hooks/useEventListener.js","hooks/useIsServer.js","Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["reducer","state","action","type","payload","Error","useEventListener","eventName","handler","savedHandler","useRef","useEffect","current","window","eventListener","event","addEventListener","passive","removeEventListener","useIsServer","useState","isServer","setIsServer","Knob","isDragging","knobPosition","knobColor","knobSize","hideKnob","onMouseDown","trackSize","children","styles","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","transformOrigin","animationTimingFunction","animationDuration","animationIterationCount","animationName","hide","opacity","style","transform","x","y","onTouchStart","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelBottom","labelFontSize","valueFontSize","appendToValue","prependToValue","verticalOffset","hideLabelValue","label","labels","display","flexDirection","justifyContent","alignItems","color","userSelect","value","fontSize","bottomMargin","marginBottom","appended","right","prepended","console","log","Svg","limit","max","activedlabelColor","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","doubleLineColor","progressSize","svgFullPath","radiansOffset","progressLineCap","offsetAngle","data","activedItem","onLableClick","svg","path","text","textAnchor","activedTitle","transition","halfTrack","maxValue","curveRadian","angleUnit","length","overflow","id","x1","x2","offset","stopColor","className","strokeWidth","strokeLinecap","d","ref","map","item","key","xlinkHref","dy","startOffset","onClick","knobOffset","Math","PI","bottom","getOffsetRideans","getSliderRotation","number","getRadians","degrees","generateRange","min","rangeOfNumbers","i","push","circularSlider","margin","mounted","CircularSlider","knobDraggable","dataIndex","renderLabelValue","onChange","initialState","radius","radians","dashFullArray","dashFullOffset","useReducer","dispatch","touchSupported","SLIDER_EVENT","DOWN","UP","MOVE","React","setActived","updatedKey","updateState","setKnobPosition","useCallback","offsetRadians","dashOffset","pointsInCircle","currentPoint","round","currentIndex","floor","cos","sin","onMouseMove","touch","preventDefault","changedTouches","offsetRelativeToDocument","rect","getBoundingClientRect","scrollLeft","pageXOffset","document","documentElement","scrollTop","pageYOffset","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","getTotalLength","updatedIndex","dataArrayLength","knobPositionIndex","setTimeout","random","sanitizedLabel","replace","App","wrapper","h3","pre","borderRadius","backgroundColor","padding","slider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6146afcd.chunk.js","sourcesContent":["const reducer = (state, action) => {\n    switch (action.type) {\n        case 'init':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'setKnobPosition':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'onMouseDown':\n        case 'onMouseUp':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'setInitialKnobPosition':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        default:\n            throw new Error();\n    }\n};\n\nexport default reducer;\n","import {useEffect, useRef} from 'react';\nimport window from 'global';\n\nconst useEventListener = (eventName, handler) => {\n    const savedHandler = useRef(null);\n\n    useEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n\n    useEffect(() => {\n            if(typeof window !== \"undefined\") {\n                // Create event listener that calls handler function stored in ref\n                const eventListener = event => savedHandler.current(event);\n\n                window.addEventListener(eventName, eventListener, {passive: false});\n                return () => {\n                    window.removeEventListener(eventName, eventListener);\n                };\n            }\n        },\n        [eventName]\n    );\n};\n\nexport default useEventListener;","import { useState, useEffect } from 'react'\n\nconst useIsServer = () => {\n    const [isServer, setIsServer] = useState(true)\n    useEffect(() => {\n        setIsServer(false)\n    }, [])\n    return isServer\n}\n\nexport default useIsServer;","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst Knob = ({\n\tisDragging,\n\tknobPosition,\n\tknobColor,\n\tknobSize,\n\thideKnob,\n\tonMouseDown,\n\ttrackSize,\n\tchildren,\n}) => {\n\tconst styles = {\n\t\tknob: {\n\t\t\tposition: 'absolute',\n\t\t\tleft: `-${knobSize / 2 - trackSize / 2}px`,\n\t\t\ttop: `-${knobSize / 2 - trackSize / 2}px`,\n\t\t\tcursor: 'grab',\n\t\t\tzIndex: 3,\n\t\t},\n\n\t\tdragging: {\n\t\t\tcursor: 'grabbing',\n\t\t},\n\n\t\tpause: {\n\t\t\tanimationPlayState: 'paused'\n\t\t},\n\n\t\tanimation: {\n\t\t\ttransformOrigin: '50% 50%',\n\t\t\tanimationTimingFunction: 'ease-out',\n\t\t\tanimationDuration: '1500ms',\n\t\t\tanimationIterationCount: 'infinite',\n\t\t\tanimationName: 'pulse',\n\t\t},\n\n\t\thide: {\n\t\t\topacity: 0\n\t\t}\n\t};\n\n\tconst defaultKnobIcon = () => {\n\t\treturn (\n\t\t\t<svg\n\t\t\t\twidth={`${knobSize}px`}\n\t\t\t\theight={`${knobSize}px`}\n\t\t\t\tviewBox={`0 0 36 36`}>\n\t\t\t\t<rect fill='#FFFFFF' x='14' y='14' width='8' height='1' />\n\t\t\t\t<rect fill='#FFFFFF' x='14' y='17' width='8' height='1' />\n\t\t\t\t<rect fill='#FFFFFF' x='14' y='20' width='8' height='1' />\n\t\t\t</svg>\n\t\t);\n\t};\n\n\tconst customKnobIcon = () => children;\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\ttransform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`,\n\t\t\t\t...styles.knob,\n\t\t\t\t...(isDragging && styles.dragging),\n\t\t\t\t...(hideKnob && styles.hide),\n\t\t\t}}\n\t\t\tonMouseDown={onMouseDown}\n\t\t\tonTouchStart={onMouseDown}>\n\t\t\t<svg\n\t\t\t\twidth={`${knobSize}px`}\n\t\t\t\theight={`${knobSize}px`}\n\t\t\t\tviewBox={`0 0 ${knobSize} ${knobSize}`}>\n\t\t\t\t<circle\n\t\t\t\t\tstyle={{ ...styles.animation, ...(isDragging && styles.pause) }}\n\t\t\t\t\tfill={knobColor}\n\t\t\t\t\tfillOpacity='0.2'\n\t\t\t\t\tstroke='none'\n\t\t\t\t\tcx={knobSize / 2}\n\t\t\t\t\tcy={knobSize / 2}\n\t\t\t\t\tr={knobSize / 2}\n\t\t\t\t/>\n\t\t\t\t<circle\n\t\t\t\t\tfill={knobColor}\n\t\t\t\t\tstroke='none'\n\t\t\t\t\tcx={knobSize / 2}\n\t\t\t\t\tcy={knobSize / 2}\n\t\t\t\t\tr={(knobSize * 2 / 3) / 2}\n\t\t\t\t/>\n\t\t\t\t{children ? customKnobIcon() : defaultKnobIcon()}\n\t\t\t</svg>\n\t\t</div>\n\t);\n};\n\nKnob.propTypes = {\n\tisDragging: PropTypes.bool,\n\tknobPosition: PropTypes.object,\n\tknobColor: PropTypes.string,\n\tknobRadius: PropTypes.number,\n\tknobSize: PropTypes.number,\n\ttrackSize: PropTypes.number,\n\tchildren: PropTypes.element,\n\tonMouseDown: PropTypes.func,\n};\n\nexport default Knob;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Labels = ({\n\tlabelColor,\n\tlabelBottom,\n\tlabelFontSize,\n\tvalueFontSize,\n\tappendToValue,\n\tprependToValue,\n\tverticalOffset,\n\thideLabelValue,\n\tlabel\n}) => {\n\tconst styles = {\n\t\tlabels: {\n\t\t\tposition: 'absolute',\n\t\t\ttop: '0',\n\t\t\tleft: '0',\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tcolor: `${labelColor}`,\n\t\t\tuserSelect: 'none',\n\t\t\tzIndex: 1,\n\t\t},\n\n\t\tvalue: {\n\t\t\tfontSize: `${valueFontSize}`,\n\t\t\tposition: 'relative',\n\t\t},\n\n\t\tbottomMargin: {\n\t\t\tmarginBottom: `calc(${verticalOffset})`,\n\t\t},\n\n\t\tappended: {\n\t\t\tposition: 'absolute',\n\t\t\tright: '0',\n\t\t\ttop: '0',\n\t\t\ttransform: 'translate(100%, 0)',\n\t\t},\n\n\t\tprepended: {\n\t\t\tposition: 'absolute',\n\t\t\tleft: '0',\n\t\t\ttop: '0',\n\t\t\ttransform: 'translate(-100%, 0)',\n\t\t},\n\n\t\thide: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t};\n\n\tconsole.log(label)\n\n\treturn (\n\t\t<div style={{ ...styles.labels, ...(hideLabelValue && styles.hide) }}>\n\t\t\t{labelBottom || <div style={{ fontSize: labelFontSize }}>{label}</div>}\n\t\t\t<div\n\t\t\t\tstyle={{ ...styles.value, ...(!labelBottom && styles.bottomMargin) }}>\n\t\t\t\t<code>\n\t\t\t\t\t<span style={styles.prepended}>{prependToValue}</span>\n\t\t\t\t\t{label?.value || label}\n\t\t\t\t\t<span style={styles.appended}>{appendToValue}</span>\n\t\t\t\t</code>\n\t\t\t</div>\n\t\t\t{labelBottom && <div style={{ fontSize: labelFontSize }}>{label}</div>}\n\t\t</div>\n\t);\n};\n\nLabels.propTypes = {\n\tlabel: PropTypes.string | PropTypes.object,\n\tlabelColor: PropTypes.string,\n\tlabelBottom: PropTypes.bool,\n\tlabelFontSize: PropTypes.string,\n\tvalueFontSize: PropTypes.string,\n\tappendToValue: PropTypes.string,\n\tprependToValue: PropTypes.string,\n\tverticalOffset: PropTypes.string,\n\thideLabelValue: PropTypes.bool,\n};\n\nexport default Labels;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Svg = ({\n  width,\n  limit,\n  max,\n  label,\n  labelColor,\n  labelFontSize,\n  activedlabelColor,\n  direction,\n  strokeDasharray,\n  strokeDashoffset,\n  progressColorFrom,\n  progressColorTo,\n  trackColor,\n  doubleLineColor,\n  progressSize,\n  trackSize,\n  svgFullPath,\n  radiansOffset,\n  progressLineCap,\n  offsetAngle,\n  data,\n  activedItem,\n  onLableClick\n}) => {\n  const styles = {\n    svg: {\n      position: \"relative\",\n      zIndex: 2,\n    },\n\n    path: {\n      transform: `rotate(${radiansOffset}rad) ${\n        direction === -1 ? \"scale(-1, 1)\" : \"scale(1, 1)\"\n      }`,\n      transformOrigin: \"center center\",\n    },\n    label: {\n      transform: \"translateY(40px)\",\n    },\n    text: {\n      textAnchor: \"middle\",\n      fontSize: labelFontSize,\n      fill: labelColor,\n      cursor: \"pointer\"\n    },\n    activedTitle: {\n      fill: activedlabelColor,\n      transition: \"all 0.6s ease-in-out\"\n    }\n  };\n\n  const halfTrack = trackSize / 2;\n  const maxValue = (strokeDasharray * (360 - limit)) / 360;\n  const curveRadian = width / 2 + 30;\n  const angleUnit = data ? limit / data.length : 1;\n\n  return (\n    <svg\n      width={`${width}px`}\n      height={`${width}px`}\n      viewBox={`0 0 ${width} ${width}`}\n      overflow=\"visible\"\n      style={styles.svg}\n    >\n      <defs>\n        <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n          <stop offset=\"0%\" stopColor={progressColorFrom} />\n          <stop offset=\"100%\" stopColor={progressColorTo} />\n        </linearGradient>\n      </defs>\n      <path\n        className=\"progress-line\"\n        style={styles.path}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={maxValue}\n        strokeWidth={trackSize}\n        stroke={trackColor}\n        strokeLinecap={\"round\"}\n        fill=\"none\"\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${\n          width - halfTrack * 2\n        }\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${\n          width - halfTrack * 2\n        }\n        `}\n      />\n      <path\n        style={styles.path}\n        strokeDasharray={strokeDasharray * 0.9}\n        strokeDashoffset={strokeDashoffset * 0.9}\n        strokeWidth={progressSize}\n        strokeLinecap={\"flat\"}\n        fill=\"none\"\n        stroke={doubleLineColor}\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - progressSize}\n            a ${width / 2 - progressSize},${width / 2 - progressSize} 0 0,1 0,${\n          width - progressSize * 2\n        }\n            a -${width / 2 - progressSize},-${\n          width / 2 - progressSize\n        } 0 0,1 0,-${width - progressSize * 2}\n        `}\n      />\n      <path\n        style={styles.path}\n        ref={svgFullPath}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={strokeDashoffset}\n        strokeWidth={progressSize}\n        strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\n        fill=\"none\"\n        stroke={`url(#${label})`}\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${\n          width - halfTrack * 2\n        }\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${\n          width - halfTrack * 2\n        }\n        `}\n      />\n\n      <path\n        id=\"myTextPath\"\n        d={`\n          M ${curveRadian},${curveRadian} m ${-curveRadian}, 0  \n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian} \n          A ${curveRadian},${curveRadian} 0 0 1 -${curveRadian},0 \n          A ${curveRadian},${curveRadian} 0 0 1 0,-${curveRadian} \n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian}\n        `}\n        transform={`translate(${width / 2},${width / 2})`}\n        fill=\"none\"\n        stroke=\"none\"\n      />\n\n      <text style={styles.text}>\n        {/* <tspan dy=\"5\"> */}\n        {/* </tspan> */}\n        {data?.map((item, key) => (\n          <textPath\n            xlinkHref=\"#myTextPath\"\n            dy=\"5\"\n            startOffset={`${\n              (angleUnit * key + angleUnit / 2 - offsetAngle) / 3.6\n            }%`}\n            key={key}\n          >\n            <tspan dy=\"5\" style={(key === activedItem && styles.activedTitle)||{}}\n              onClick={()=>onLableClick(key)}\n            >\n              {item.value}\n            </tspan>\n          </textPath>\n        ))}\n      </text>\n    </svg>\n  );\n};\n\nSvg.propTypes = {\n  width: PropTypes.number,\n  label: PropTypes.string,\n  direction: PropTypes.number,\n  svgFullPath: PropTypes.object,\n  strokeDasharray: PropTypes.number,\n  strokeDashoffset: PropTypes.number,\n  progressColorFrom: PropTypes.string,\n  progressColorTo: PropTypes.string,\n  progressLineCap: PropTypes.string,\n  progressSize: PropTypes.number,\n  trackColor: PropTypes.string,\n  trackSize: PropTypes.number,\n  radiansOffset: PropTypes.number,\n};\n\nexport default Svg;\n","import React, { useEffect, useReducer, useCallback, useRef } from \"react\";\nimport window from \"global\";\nimport PropTypes from \"prop-types\";\nimport reducer from \"../redux/reducer\";\nimport useEventListener from \"../hooks/useEventListener\";\nimport useIsServer from \"../hooks/useIsServer\";\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\n\nconst spreadDegrees = 360;\nconst knobOffset = {\n  top: Math.PI / 2,\n  right: 0,\n  bottom: -Math.PI / 2,\n  left: -Math.PI,\n};\n\nconst getOffsetRideans = (knobPosition, offsetAngle) => {\n  return knobOffset[knobPosition] + (offsetAngle / 180) * Math.PI;\n};\n\nconst getSliderRotation = (number) => {\n  if (number < 0) return -1;\n  return 1;\n};\n\nconst getRadians = (degrees) => {\n  return (degrees * Math.PI) / 180;\n};\n\nconst generateRange = (min, max) => {\n  let rangeOfNumbers = [];\n  for (let i = min; i <= max; i++) {\n    rangeOfNumbers.push(i);\n  }\n  return rangeOfNumbers;\n};\n\nconst styles = {\n  circularSlider: {\n    position: \"relative\",\n    display: \"inline-block\",\n    opacity: 0,\n    transition: \"opacity 1s ease-in\",\n    margin: '45px'\n  },\n\n  mounted: {\n    opacity: 1,\n  },\n};\n\nconst CircularSlider = ({\n  label = \"ANGLE\",\n  width = 280,\n  direction = 1,\n  min = 0,\n  max = 360,\n  limit = 360,\n  offsetAngle = 0,\n  knobColor = \"#4e63ea\",\n  knobSize = 36,\n  knobPosition = \"top\",\n  labelBottom = false,\n  labelColor = \"#272b77\",\n  labelFontSize = \"1rem\",\n  activedlabelColor = \"#c54a1b\",\n  valueFontSize = \"3rem\",\n  appendToValue = \"\",\n  prependToValue = \"\",\n  verticalOffset = \"1.5rem\",\n  hideLabelValue = false,\n  hideKnob = false,\n  knobDraggable = true,\n  progressColorFrom = \"#80C3F3\",\n  progressColorTo = \"#4990E2\",\n  progressSize = 8,\n  trackColor = \"#DDDEFB\",\n  trackSize = 8,\n  doubleLineColor = \"#DDDEFB\",\n  data = [],\n  dataIndex = 0,\n  progressLineCap = \"round\",\n  renderLabelValue = null,\n  cursor,\n  onChange = (value) => {},\n}) => {\n  const initialState = {\n    mounted: false,\n    isDragging: false,\n    width: width,\n    radius: width / 2,\n    knobPosition: knobPosition,\n    label: 0,\n    data: data,\n    radians: 0,\n    offset: 0,\n    knob: {\n      x: 0,\n      y: 0,\n    },\n    dashFullArray: 0,\n    dashFullOffset: 0,\n  };\n  const isServer = useIsServer();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const circularSlider = useRef(null);\n  const svgFullPath = useRef(null);\n  const touchSupported = !isServer && \"ontouchstart\" in window;\n  const SLIDER_EVENT = {\n    DOWN: touchSupported ? \"touchstart\" : \"mousedown\",\n    UP: touchSupported ? \"touchend\" : \"mouseup\",\n    MOVE: touchSupported ? \"touchmove\" : \"mousemove\",\n  };\n  const [activedItem, setActived] = React.useState(null);\n  const [updatedKey, updateState] = React.useState(null);\n\n  const setKnobPosition = useCallback(\n    (radians) => {\n      const radius = state.radius - trackSize / 2;\n      const offsetRadians = radians + getOffsetRideans(knobPosition, offsetAngle);\n      let degrees = (offsetRadians > 0 ? offsetRadians : 2 * Math.PI + offsetRadians) * (spreadDegrees / (2 * Math.PI));\n\n      if (knobPosition === \"bottom\" && degrees > limit) {\n        return true;\n      }\n      if (knobPosition === \"top\" && degrees < 360 - limit) {\n        degrees = 360 - limit;\n        return true;\n      }\n      // change direction\n      const dashOffset = (degrees / spreadDegrees) * state.dashFullArray;\n      degrees = getSliderRotation(direction) === -1 ? spreadDegrees - degrees : degrees;\n\n      const pointsInCircle = state.data.length / spreadDegrees;\n      const currentPoint = Math.round(degrees * pointsInCircle);\n      const currentIndex = Math.floor((degrees * data.length) / limit);\n\n      setActived(currentIndex);\n\n      if (state.data[currentPoint] !== state.label) {\n        onChange(state.data[currentPoint]);\n      }\n\n      console.log(state.data[currentPoint])\n      dispatch({\n        type: \"setKnobPosition\",\n        payload: {\n          dashFullOffset: getSliderRotation(direction) === -1 ? dashOffset : state.dashFullArray - dashOffset,\n          label: state.data[currentPoint],\n          knob: {\n            x: radius * Math.cos(radians) + radius,\n            y: radius * Math.sin(radians) + radius,\n          },\n        },\n      });\n    },\n    // eslint-disable-next-line\n    [\n      offsetAngle,\n      limit,\n      state.dashFullArray,\n      state.radius,\n      state.data,\n      state.label,\n      knobPosition,\n      trackSize,\n      direction,\n      onChange,\n    ]\n  );\n\n  const onMouseDown = () => {\n    dispatch({\n      type: \"onMouseDown\",\n      payload: {\n        isDragging: true,\n      },\n    });\n  };\n\n  const onMouseUp = () => {\n    dispatch({\n      type: \"onMouseUp\",\n      payload: {\n        isDragging: false,\n      },\n    });\n\n    setTimeout(() => {\n      updateState(Math.random());\n    }, 200);\n  };\n\n  const onMouseMove = useCallback(\n    (event) => {\n      if (!state.isDragging) return;\n\n      event.preventDefault();\n\n      let touch;\n      if (event.type === \"touchmove\") {\n        touch = event.changedTouches[0];\n      }\n\n      const offsetRelativeToDocument = (ref) => {\n        const rect = ref.current.getBoundingClientRect();\n        const scrollLeft = !isServer && ((window?.pageXOffset ?? 0) || (document?.documentElement?.scrollLeft ?? 0));\n        const scrollTop = !isServer && ((window?.pageYOffset ?? 0) || (document?.documentElement?.scrollTop ?? 0));\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n      };\n\n      const mouseXFromCenter =\n        (event.type === \"touchmove\" ? touch.pageX : event.pageX) -\n        (offsetRelativeToDocument(circularSlider).left + state.radius);\n      const mouseYFromCenter =\n        (event.type === \"touchmove\" ? touch.pageY : event.pageY) -\n        (offsetRelativeToDocument(circularSlider).top + state.radius);\n\n      const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n\n      setKnobPosition(radians);\n    },\n    [state.isDragging, state.radius, setKnobPosition, isServer]\n  );\n\n  // Get svg path length onmount\n  useEffect(() => {\n    dispatch({\n      type: \"init\",\n      payload: {\n        mounted: true,\n        data: state.data.length ? [...state.data] : [...generateRange(min, max)],\n        dashFullArray: svgFullPath.current.getTotalLength ? svgFullPath.current.getTotalLength() : 0,\n      },\n    });\n    // eslint-disable-next-line\n  }, [max, min]);\n\n  // Set knob position\n  useEffect(() => {\n    let updatedIndex = activedItem === null ? dataIndex : activedItem;\n    const dataArrayLength = state.data.length;\n    const knobPositionIndex = updatedIndex > dataArrayLength - 1 ? dataArrayLength - 1 : updatedIndex;\n\n    if (!!dataArrayLength) {\n      const pointsInCircle = limit / dataArrayLength;\n      const offset = getRadians(pointsInCircle) / 2;\n\n      dispatch({\n        type: \"setInitialKnobPosition\",\n        payload: {\n          radians: Math.PI / 2 - getOffsetRideans(state.knobPosition, offsetAngle),\n          offset,\n        },\n      });\n\n      const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\n      const radians = getRadians(degrees) - getOffsetRideans(state.knobPosition, offsetAngle);\n\n      return setKnobPosition(radians + offset * getSliderRotation(direction));\n    }\n\n    // eslint-disable-next-line\n  }, [state.dashFullArray, state.knobPosition, state.data.length, dataIndex, direction, updatedKey]);\n\n  useEventListener(SLIDER_EVENT.MOVE, onMouseMove);\n  useEventListener(SLIDER_EVENT.UP, onMouseUp);\n\n  const sanitizedLabel = label.replace(/[\\W_]/g, \"_\");\n\n  return (\n    <div style={{ ...styles.circularSlider, ...(state.mounted && styles.mounted) }} ref={circularSlider}>\n      <Svg\n        width={width}\n        label={sanitizedLabel}\n        limit={limit}\n        max={max}\n        direction={direction}\n        strokeDasharray={state.dashFullArray}\n        strokeDashoffset={state.dashFullOffset}\n        svgFullPath={svgFullPath}\n        progressSize={progressSize}\n        progressColorFrom={progressColorFrom}\n        progressColorTo={progressColorTo}\n        progressLineCap={progressLineCap}\n        doubleLineColor={doubleLineColor}\n        trackColor={trackColor}\n        trackSize={trackSize}\n        radiansOffset={state.radians}\n        offsetAngle={offsetAngle}\n        labelColor={labelColor}\n        labelFontSize={labelFontSize}\n        activedlabelColor={activedlabelColor}\n        data={data}\n        activedItem={activedItem}\n        onLableClick={(id)=> {\n          setActived(id);\n          updateState(Math.random());\n        }}\n      />\n      {knobDraggable && (\n        <Knob\n          isDragging={state.isDragging}\n          knobPosition={{ x: state.knob.x, y: state.knob.y }}\n          knobSize={knobSize}\n          knobColor={knobColor}\n          trackSize={trackSize}\n          hideKnob={hideKnob}\n          onMouseDown={onMouseDown}\n        >\n          {cursor}\n        </Knob>\n      )}\n      {renderLabelValue || (\n        <Labels\n          label={label}\n          labelColor={labelColor}\n          labelBottom={labelBottom}\n          labelFontSize={labelFontSize}\n          verticalOffset={verticalOffset}\n          valueFontSize={valueFontSize}\n          appendToValue={appendToValue}\n          prependToValue={prependToValue}\n          hideLabelValue={hideLabelValue}\n          value={state.label}\n        />\n      )}\n    </div>\n  );\n};\n\nCircularSlider.propTypes = {\n  label: PropTypes.string,\n  width: PropTypes.number,\n  direction: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  knobColor: PropTypes.string,\n  knobPosition: PropTypes.string,\n  hideKnob: PropTypes.bool,\n  knobDraggable: PropTypes.bool,\n  labelColor: PropTypes.string,\n  labelBottom: PropTypes.bool,\n  labelFontSize: PropTypes.string,\n  valueFontSize: PropTypes.string,\n  appendToValue: PropTypes.string,\n  renderLabelValue: PropTypes.element,\n  prependToValue: PropTypes.string,\n  verticalOffset: PropTypes.string,\n  hideLabelValue: PropTypes.bool,\n  progressLineCap: PropTypes.string,\n  progressColorFrom: PropTypes.string,\n  progressColorTo: PropTypes.string,\n  progressSize: PropTypes.number,\n  trackColor: PropTypes.string,\n  trackSize: PropTypes.number,\n  data: PropTypes.array,\n  dataIndex: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nexport default CircularSlider;\n","import React from \"react\";\nimport CircularSlider from \"./CircularSlider\";\n\nconst App = () => {\n  const styles = {\n    wrapper: {\n      margin: \"2rem\",\n    },\n\n    h3: {\n      margin: \"3rem 0 2rem 0\",\n    },\n\n    pre: {\n      fontSize: \"0.9rem\",\n      borderRadius: \"0.3rem\",\n      backgroundColor: \"#eeeeee\",\n      padding: \"0.5rem\",\n    },\n\n    slider: {\n      padding: \"0 0 0.5rem 0\",\n    },\n  };\n\n  return (\n    <div style={styles.wrapper}>\n      <h3 style={styles.h3}>\n        Anticlockwise rotation with the knob positioned to the right and \"°\"\n        appended to the value:\n      </h3>\n      <div style={styles.slider}>\n        <CircularSlider\n          limit={270}\n          offsetAngle={-45}\n          direction={1}\n          data={[\n            {\n              key: 1,\n              value: \"STAFFING\",\n            },\n            {\n              key: 2,\n              value: \"TEAM\",\n            },\n            {\n              key: 1,\n              value: \"PROJECT\",\n            },\n            {\n              key: 1,\n              value: \"MANAGED\",\n            }\n          ]}\n          knobPosition=\"bottom\"\n          valueFontSize=\"4rem\"\n          renderLabelValue={false}\n          progressLineCap=\"flat\"\n          progressSize={24}\n          trackColor=\"#eeeeee\"\n          trackSize={24}\n        >\n        </CircularSlider>\n      </div>\n      <pre className={styles.pre}>\n{`<CircularSlider\n  min={0}\n  max={360}\n  limit={270}\n  offsetAngle={-45}\n  direction={1}\n  knobPosition=\"bottom\"\n  appendToValue=\"°\"\n  valueFontSize=\"4rem\"\n/>`}\n      </pre>\n      <h3 className={styles.h3}>\n        An initial value of 20, \"$\" prepended and \"K\" appended to the value with\n        a custom knob icon and the label on the bottom:\n      </h3>\n      <div className={styles.slider}>\n        {/* <CircularSlider\n          label=\"savings account\"\n          min={0}\n          max={100}\n          dataIndex={20}\n          prependToValue=\"$\"\n          appendToValue=\"K\"\n          labelColor=\"#005a58\"\n          labelBottom={true}\n          knobColor=\"#005a58\"\n          knobSize={72}\n          progressColorFrom=\"#00bfbd\"\n          progressColorTo=\"#009c9a\"\n          progressSize={24}\n          trackColor=\"#eeeeee\"\n          trackSize={24}\n        >\n          <DragIcon x=\"22\" y=\"22\" width=\"28px\" height=\"28px\" />\n        </CircularSlider> */}\n      </div>\n      <pre className={styles.pre}>\n        {`import { ReactComponent as PowerIcon } from './assets/power.svg';\n.\n.\n.\n<CircularSlider\n    label=\"savings\"\n    min={0}\n    max={100}\n    dataIndex={20}\n    prependToValue=\"$\"\n    appendToValue=\"K\"\n    labelColor=\"#005a58\"\n    labelBottom={true}\n    knobColor=\"#005a58\"\n    knobSize={72}\n    progressColorFrom=\"#00bfbd\"\n    progressColorTo=\"#005a58\"\n    progressSize={24}\n    trackColor=\"#eeeeee\"\n    trackSize={24}\n>\n    <DragIcon x='22' y='22' width='28px' height='28px' />\n</CircularSlider>`}\n      </pre>\n      <h3 className={styles.h3}>\n        A flat line cap with the track size smaller than the progress track size\n        and a smiley knob:\n      </h3>\n      <div className={styles.slider}>\n        {/* <CircularSlider\n          label=\"Alphabet\"\n          progressLineCap=\"flat\"\n          dataIndex={1}\n          max={270}\n          width={250}\n          labelColor=\"#212121\"\n          valueFontSize=\"6rem\"\n          verticalOffset=\"1rem\"\n          knobColor=\"#212121\"\n          progressColorFrom=\"#ff8500\"\n          progressColorTo=\"#a15400\"\n          progressSize={12}\n          trackColor=\"#eeeeee\"\n          trackSize={10}\n          data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n        >\n          <EmojiIcon x=\"9\" y=\"9\" width=\"18px\" height=\"18px\" />\n        </CircularSlider> */}\n      </div>\n      <pre className={styles.pre}>\n        {`\nimport { ReactComponent as EmojiIcon } from './assets/emoji.svg';\n.\n.\n.\n<CircularSlider\n    width={200}\n    progressLineCap=\"flat\"\n    dataIndex={1}\n    label=\"Alphabet\"\n    data=[\"A\",\"B\",\"C\"]//...\n    labelColor=\"#212121\"\n    valueFontSize=\"6rem\"\n    verticalOffset=\"1rem\"\n    knobColor=\"#212121\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n>\n    <EmojiIcon x=\"9\" y=\"9\" width=\"18px\" height=\"18px\" />\n</CircularSlider>`}\n      </pre>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}