{"version":3,"sources":["Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["Knob","props","isDragging","knobPosition","knobColor","knobRadius","knobSize","onMouseDown","styles","StyleSheet","create","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","animationDuration","transformOrigin","animationIterationCount","animationTimingFunction","animationName","transform","style","x","y","className","css","onTouchStart","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelFontSize","labelValueFontSize","labelVerticalOffset","labelHide","label","value","labels","display","flexDirection","justifyContent","alignItems","color","fontSize","marginBottom","hide","Svg","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","progressSize","trackSize","svgFullPath","progressLineCap","svg","overflow","id","x1","x2","offset","stopColor","strokeWidth","ref","strokeLinecap","d","touchSupported","window","SLIDER_EVENT","DOWN","UP","MOVE","CircularSlider","data","placeKnobAtIndex","onChange","useState","mounted","radius","radians","dashFullArray","dashFullOffset","state","setState","circularSlider","useRef","offsetRelativeToDocument","useCallback","rect","current","getBoundingClientRect","scrollLeft","pageXOffset","document","documentElement","scrollTop","pageYOffset","offsetRadians","degrees","Math","PI","dashOffset","currentPoint","length","pointsInCircle","ceil","floor","labelValue","round","prevState","cos","sin","event","onMouseMove","preventDefault","touch","type","changedTouches","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","onMouseUp","useEffect","pathLength","getTotalLength","dataArrayLength","knobPositionIndex","addEventListener","passive","removeEventListener","opacity","transition","App","wrapper","margin","h2","borderBottom","paddingBottom","h3","deg","console","log","split","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.183c16fb.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Knob = (props) => {\n    const {\n        isDragging,\n        knobPosition,\n        knobColor,\n        knobRadius = 12,\n        knobSize = 36,\n        onMouseDown,\n    } = props;\n\n    const pulse_animation = {\n        \"0%\": {transform: \"scale(1)\"},\n        \"50%\": {transform: \"scale(0.8)\"},\n        \"100%\": {transform: \"scale(1)\"}\n    };\n\n    const styles = StyleSheet.create({\n        knob: {\n            position: 'absolute',\n            left: `-${knobSize/2}px`,\n            top: `-${knobSize/2}px`,\n            cursor: 'grab',\n            zIndex: 3\n        },\n\n        dragging: {\n            cursor: 'grabbing',\n        },\n\n        pause: {\n            animationPlayState: 'paused',\n        },\n\n        animation: {\n            animationDuration: '1500ms',\n            transformOrigin: '50% 50%',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-out',\n            animationName: [pulse_animation]\n        },\n    });\n\n    return (\n        <div\n            style={{transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`}}\n            className={css(styles.knob, isDragging && styles.dragging)}\n            onMouseDown={onMouseDown}\n            onTouchStart={onMouseDown}\n        >\n            <svg\n                width={`${knobSize}px`}\n                height={`${knobSize}px`}\n                viewBox={`0 0 ${knobSize} ${knobSize}`}\n            >\n                <circle\n                    className={css(styles.animation, isDragging && styles.pause)}\n                    fill={knobColor}\n                    fillOpacity=\"0.2\"\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobSize / 2}\n                />\n                <circle\n                    fill={knobColor}\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobRadius}\n                />\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\"/>\n            </svg>\n        </div>\n    );\n};\n\nexport default Knob;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Labels = (props) => {\n    const {\n        labelColor,\n        labelFontSize,\n        labelValueFontSize,\n        labelVerticalOffset,\n        labelHide,\n        label,\n        value\n    } = props;\n\n    const styles = StyleSheet.create({\n        labels: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: `${labelColor}`,\n            zIndex: 1,\n        },\n\n        value: {\n            fontSize: `${labelValueFontSize}`,\n            marginBottom: `calc(${labelVerticalOffset})`\n        },\n\n        hide: {\n            display: 'none'\n        }\n    });\n\n    return (\n        <div className={css(styles.labels, labelHide && styles.hide)}>\n            <div style={{fontSize: labelFontSize}}>{label}</div>\n            <div className={css(styles.value)}>\n                <code>{value}</code>\n            </div>\n        </div>\n    );\n};\n\nexport default Labels;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Svg = (props) => {\n    const {\n        width,\n        label,\n        strokeDasharray,\n        strokeDashoffset,\n        progressColorFrom,\n        progressColorTo,\n        trackColor,\n        progressSize,\n        trackSize,\n        svgFullPath,\n        progressLineCap,\n    } = props;\n\n    const styles = StyleSheet.create({\n        svg: {\n            position: 'relative',\n            zIndex: 2\n        },\n    });\n\n    return (\n        <svg\n            width={`${width}px`}\n            height={`${width}px`}\n            viewBox={`0 0 ${width} ${width}`}\n            overflow=\"visible\"\n            className={css(styles.svg)}\n        >\n            <defs>\n                <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n                    <stop offset=\"0%\" stopColor={progressColorFrom}/>\n                    <stop offset=\"100%\" stopColor={progressColorTo}/>\n                </linearGradient>\n            </defs>\n            <circle\n                strokeWidth={trackSize}\n                fill=\"none\"\n                stroke={trackColor}\n                cx={width / 2}\n                cy={width / 2}\n                r={width / 2}\n            />\n            <path\n                ref={svgFullPath}\n                strokeDasharray={strokeDasharray}\n                strokeDashoffset={strokeDashoffset}\n                strokeWidth={progressSize}\n                strokeLinecap={progressLineCap !== 'round' ? 'butt' : 'round'}\n                fill=\"none\"\n                stroke={`url(#${label})`}\n                d={`\n                        M ${width / 2}, ${width / 2}\n                        m 0, -${width / 2}\n                        a ${width / 2},${width / 2} 0 0,1 0,${width}\n                        a -${width / 2},-${width / 2} 0 0,1 0,-${width}\n                    `}/>\n        </svg>\n    );\n};\n\nexport default Svg;\n","import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\n\nconst touchSupported = ('ontouchstart' in window);\n\nconst SLIDER_EVENT = {\n    DOWN: touchSupported ? 'touchstart' : 'mousedown',\n    UP: touchSupported ? 'touchend' : 'mouseup',\n    MOVE: touchSupported ? 'touchmove' : 'mousemove',\n};\n\nconst CircularSlider = (props) => {\n    const {\n        label = 'DEGREES',\n        width = 280,\n        knobColor = '#4e63ea',\n        labelColor = '#272b77',\n        labelFontSize = '1rem',\n        labelValueFontSize = '4rem',\n        labelVerticalOffset = '2rem',\n        labelHide = false,\n        progressColorFrom = '#80C3F3',\n        progressColorTo = '#4990E2',\n        progressSize = 6,\n        trackColor = '#DDDEFB',\n        trackSize = 6,\n        data = [],\n        placeKnobAtIndex = 0,\n        progressLineCap = 'round',\n        onChange = value => {}\n    } = props;\n    const [state, setState] = useState({\n        mounted: false,\n        isDragging: false,\n        width: width,\n        radius: width / 2,\n        label: 0,\n        radians: 0,\n        knob: {\n            x: 0,\n            y: 0,\n        },\n        dashFullArray: 0,\n        dashFullOffset: 0\n    });\n\n    let radiansOffset = 1.571; // offset by 90 degrees\n    let circularSlider = useRef(null);\n    let svgFullPath = useRef(null);\n\n    const offsetRelativeToDocument = useCallback(() => {\n        const rect = circularSlider.current.getBoundingClientRect();\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        return {top: rect.top + scrollTop, left: rect.left + scrollLeft};\n    }, []);\n\n    const knobPosition = useCallback((radians) => {\n        const radius = state.radius;\n        const offsetRadians = radians + radiansOffset;\n        const degrees = (offsetRadians > 0 ? offsetRadians\n            :\n            ((2 * Math.PI) + offsetRadians)) * (360 / (2 * Math.PI));\n\n        const dashOffset = state.dashFullArray - ((degrees / 360) * state.dashFullArray);\n        let currentPoint = 0;\n\n        if(!!data.length) {\n            const pointsInCircle = Math.ceil(360 / data.length);\n            currentPoint = Math.floor(degrees / pointsInCircle);\n        }\n\n        const labelValue = !!data.length ? data[currentPoint] : Math.round(degrees);\n\n        setState(prevState => ({\n            ...prevState,\n            dashFullOffset: dashOffset,\n            label: labelValue,\n            knob: {\n                x: (radius * Math.cos(radians) + radius),\n                y: (radius * Math.sin(radians) + radius),\n            }\n        }));\n\n        // props callback for parent\n        onChange(labelValue);\n    }, [state.dashFullArray, state.radius, data, radiansOffset, onChange]);\n\n    const onMouseDown = useCallback((event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: true\n        }));\n\n    }, []);\n\n    const onMouseMove = useCallback((event) => {\n        event.preventDefault();\n\n        if (!state.isDragging) return;\n\n        let touch;\n        if (event.type === 'touchmove') {\n            touch = event.changedTouches[0];\n        }\n\n        const mouseXFromCenter = (event.type === 'touchmove' ? touch.pageX : event.pageX) -\n            (offsetRelativeToDocument().left + state.radius);\n        const mouseYFromCenter = (event.type === 'touchmove' ? touch.pageY : event.pageY) -\n            (offsetRelativeToDocument().top + state.radius);\n\n        const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n        knobPosition(radians);\n    }, [state.isDragging, state.radius, knobPosition, offsetRelativeToDocument]);\n\n    const onMouseUp = (event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: false\n        }));\n    };\n\n    // Get svg path length on mount\n    useEffect(() => {\n        const pathLength = svgFullPath.current.getTotalLength();\n\n        setState(prevState => ({\n            ...prevState,\n            mounted: true,\n            dashFullArray: pathLength,\n        }));\n    }, []);\n\n    useEffect(() => {\n        const dataArrayLength = data.length;\n        const knobPositionIndex = (placeKnobAtIndex > dataArrayLength - 1) ? dataArrayLength : placeKnobAtIndex;\n\n        if(knobPositionIndex && !!dataArrayLength) {\n            const pointsInCircle = Math.ceil(360 / dataArrayLength);\n            const degrees = knobPositionIndex * pointsInCircle;\n            const radians = (degrees * Math.PI / 180) - radiansOffset;\n\n            return knobPosition(radians);\n        }\n\n        return knobPosition(-radiansOffset+0.005); // Add to offset to break boundary\n        // eslint-disable-next-line\n    }, [state.dashFullArray, placeKnobAtIndex, data.length, radiansOffset]);\n\n    useEffect(() => {\n        if (state.isDragging) {\n            window.addEventListener(SLIDER_EVENT.MOVE, onMouseMove, {passive: false});\n            window.addEventListener(SLIDER_EVENT.UP, onMouseUp, {passive: false});\n            return () => {\n                window.removeEventListener(SLIDER_EVENT.MOVE, onMouseMove);\n                window.removeEventListener(SLIDER_EVENT.UP, onMouseUp);\n            }\n        }\n    }, [state.isDragging, onMouseMove]);\n\n    const styles = StyleSheet.create({\n        circularSlider: {\n            position: 'relative',\n            display: 'inline-block',\n            opacity: 0,\n            transition: 'opacity 1s ease-in'\n        },\n\n        mounted: {\n            opacity: 1\n        },\n    });\n\n    return (\n        <div className={css(styles.circularSlider, state.mounted && styles.mounted)} ref={circularSlider}>\n            <Svg\n                width={width}\n                label={label}\n                strokeDasharray={state.dashFullArray}\n                strokeDashoffset={state.dashFullOffset}\n                progressColorFrom={progressColorFrom}\n                progressColorTo={progressColorTo}\n                trackColor={trackColor}\n                progressSize={progressSize}\n                trackSize={trackSize}\n                svgFullPath={svgFullPath}\n                progressLineCap={progressLineCap}\n            />\n            <Knob\n                isDragging={state.isDragging}\n                knobPosition={{ x: state.knob.x, y: state.knob.y }}\n                knobColor={knobColor}\n                onMouseDown={onMouseDown}\n            />\n            <Labels\n                labelColor={labelColor}\n                labelFontSize={labelFontSize}\n                labelVerticalOffset={labelVerticalOffset}\n                labelValueFontSize={labelValueFontSize}\n                labelHide={labelHide}\n                label={label}\n                value={`${state.label}`}\n            />\n        </div>\n    );\n};\n\nexport default CircularSlider;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport CircularSlider from \"./CircularSlider\";\n\nconst App = () => {\n    const styles = StyleSheet.create({\n        wrapper: {\n            margin: '2rem'\n        },\n\n        h2: {\n            borderBottom: '1px solid #eeeeee',\n            paddingBottom: '0.5rem',\n        },\n\n        h3: {\n            margin: '2rem 0',\n        }\n    });\n\n    const onSliderChange = (deg) => {\n        console.log(deg);\n    };\n\n    return (\n        <div className={css(styles.wrapper)}>\n            <h2 className={css(styles.h2)}>react-circular-slider</h2>\n            <h3 className={css(styles.h3)}>example 1:</h3>\n            <pre>\n                {`<CircularSlider\n    onChange={onSliderChange}\n/>`}\n            </pre>\n            <p>&nbsp;</p>\n            <CircularSlider\n                onChange={onSliderChange}\n            />\n            <p>&nbsp;</p>\n            <h3 className={css(styles.h3)}>example 2:</h3>\n            <pre>\n                {`<CircularSlider\n    label=\"savings\"\n    data=[\"1€\",\"2€\",...]\n    placeKnobAtIndex={10}\n    labelColor=\"#005a58\"\n    knobColor=\"#005a58\"\n    progressColorFrom=\"#00bfbd\"\n    progressColorTo=\"#005a58\"\n    progressSize={24}\n    trackColor=\"#eeeeee\"\n    trackSize={24}\n/>`}\n            </pre>\n            <p>&nbsp;</p>\n            <CircularSlider\n                label=\"savings\"\n                labelColor={\"#005a58\"}\n                knobColor={\"#005a58\"}\n                progressColorFrom={\"#00bfbd\"}\n                progressColorTo={\"#009c9a\"}\n                progressSize={24}\n                trackColor={\"#eeeeee\"}\n                trackSize={24}\n                placeKnobAtIndex={10}\n                data={[\"1€\",\"2€\",\"3€\",\"4€\",\"5€\",\"6€\",\"7€\",\"8€\",\"9€\",\"10€\",\"20€\",\"30€\",\"40€\",\"50€\",\"60€\",\"70€\",\"80€\",\"90€\",\"100€\",\"200€\",\"300€\",\"400€\",\"500€\",\"600€\",\"700€\",\"800€\",\"900€\",\"1000€\",\"2000€\",\"3000€\",\"4000€\",\"5000€\",\"6000€\",\"7000€\",\"8000€\",\"9000€\",\"10000€\"]}\n            />\n            <p>&nbsp;</p>\n            <h3 className={css(styles.h3)}>example 3:</h3>\n            <pre>\n                {`<CircularSlider\n    label=\"Alphabet\"\n    width={200}\n    data=[\"A\",\"B\",\"C\",...]\n    labelColor=\"#212121\"\n    labelValueFontSize=\"6rem\"\n    knobColor=\"#212121\"\n    progressLineCap=\"flat\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n/>`}\n            </pre>\n            <p>&nbsp;</p>\n            <CircularSlider\n                label=\"Alphabet\"\n                width={250}\n                labelColor={\"#212121\"}\n                labelValueFontSize={\"6rem\"}\n                knobColor={\"#212121\"}\n                progressColorFrom={\"#ff8500\"}\n                progressColorTo={\"#a15400\"}\n                progressSize={8}\n                trackColor={\"#eeeeee\"}\n                trackSize={4}\n                progressLineCap=\"flat\"\n                data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n            />\n            <p>&nbsp;</p>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}