{"version":3,"sources":["Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["Knob","props","isDragging","knobPosition","knobColor","knobRadius","knobSize","onMouseDown","styles","StyleSheet","create","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","animationDuration","transformOrigin","animationIterationCount","animationTimingFunction","animationName","transform","style","x","y","className","css","onTouchStart","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelFontSize","labelValueFontSize","labelVerticalOffset","labelHide","label","value","labels","display","flexDirection","justifyContent","alignItems","color","userSelect","fontSize","marginBottom","hide","Svg","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","progressSize","trackSize","svgFullPath","radiansOffset","progressLineCap","svg","path","overflow","id","x1","x2","offset","stopColor","strokeWidth","ref","strokeLinecap","d","touchSupported","window","SLIDER_EVENT","DOWN","UP","MOVE","CircularSlider","min","max","knobZeroPosition","data","initialDataIndex","onChange","useState","mounted","radius","radians","dashFullArray","dashFullOffset","state","setState","knobOffset","Math","PI","right","bottom","circularSlider","useRef","getSliderRotation","number","generateRange","rangeOfNumbers","i","push","offsetRelativeToDocument","useCallback","rect","current","getBoundingClientRect","scrollLeft","pageXOffset","document","documentElement","scrollTop","pageYOffset","offsetRadians","degrees","dashOffset","pointsInCircle","length","currentPoint","floor","prevState","cos","sin","event","onMouseMove","preventDefault","touch","type","changedTouches","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","onMouseUp","useEffect","pathLength","getTotalLength","dataArrayLength","knobPositionIndex","ceil","addEventListener","passive","removeEventListener","opacity","transition","App","wrapper","margin","h3","pre","borderRadius","backgroundColor","padding","slider","split","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ac0e981c.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Knob = (props) => {\n    const {\n        isDragging,\n        knobPosition,\n        knobColor,\n        knobRadius = 12,\n        knobSize = 36,\n        onMouseDown,\n    } = props;\n\n    const pulse_animation = {\n        \"0%\": {transform: \"scale(1)\"},\n        \"50%\": {transform: \"scale(0.8)\"},\n        \"100%\": {transform: \"scale(1)\"}\n    };\n\n    const styles = StyleSheet.create({\n        knob: {\n            position: 'absolute',\n            left: `-${knobSize/2}px`,\n            top: `-${knobSize/2}px`,\n            cursor: 'grab',\n            zIndex: 3\n        },\n\n        dragging: {\n            cursor: 'grabbing',\n        },\n\n        pause: {\n            animationPlayState: 'paused',\n        },\n\n        animation: {\n            animationDuration: '1500ms',\n            transformOrigin: '50% 50%',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-out',\n            animationName: [pulse_animation]\n        },\n    });\n\n    return (\n        <div\n            style={{transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`}}\n            className={css(styles.knob, isDragging && styles.dragging)}\n            onMouseDown={onMouseDown}\n            onTouchStart={onMouseDown}\n        >\n            <svg\n                width={`${knobSize}px`}\n                height={`${knobSize}px`}\n                viewBox={`0 0 ${knobSize} ${knobSize}`}\n            >\n                <circle\n                    className={css(styles.animation, isDragging && styles.pause)}\n                    fill={knobColor}\n                    fillOpacity=\"0.2\"\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobSize / 2}\n                />\n                <circle\n                    fill={knobColor}\n                    stroke=\"none\"\n                    cx={knobSize / 2}\n                    cy={knobSize / 2}\n                    r={knobRadius}\n                />\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\"/>\n                <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\"/>\n            </svg>\n        </div>\n    );\n};\n\nexport default Knob;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Labels = (props) => {\n    const {\n        labelColor,\n        labelFontSize,\n        labelValueFontSize,\n        labelVerticalOffset,\n        labelHide,\n        label,\n        value\n    } = props;\n\n    const styles = StyleSheet.create({\n        labels: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: `${labelColor}`,\n            userSelect: 'none',\n            zIndex: 1,\n        },\n\n        value: {\n            fontSize: `${labelValueFontSize}`,\n            marginBottom: `calc(${labelVerticalOffset})`\n        },\n\n        hide: {\n            display: 'none'\n        }\n    });\n\n    return (\n        <div className={css(styles.labels, labelHide && styles.hide)}>\n            <div style={{fontSize: labelFontSize}}>{label}</div>\n            <div className={css(styles.value)}>\n                <code>{value}</code>\n            </div>\n        </div>\n    );\n};\n\nexport default Labels;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\n\nconst Svg = (props) => {\n    const {\n        width,\n        label,\n        direction,\n        strokeDasharray,\n        strokeDashoffset,\n        progressColorFrom,\n        progressColorTo,\n        trackColor,\n        progressSize,\n        trackSize,\n        svgFullPath,\n        radiansOffset,\n        progressLineCap,\n    } = props;\n\n    const styles = StyleSheet.create({\n        svg: {\n            position: 'relative',\n            zIndex: 2\n        },\n\n        path: {\n            transform: `rotate(${radiansOffset}rad) ${direction === -1 && 'scale(-1, 1)'}`,\n            transformOrigin: 'center center'\n        }\n    });\n\n    return (\n        <svg\n            width={`${width}px`}\n            height={`${width}px`}\n            viewBox={`0 0 ${width} ${width}`}\n            overflow=\"visible\"\n            className={css(styles.svg)}\n        >\n            <defs>\n                <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n                    <stop offset=\"0%\" stopColor={progressColorFrom}/>\n                    <stop offset=\"100%\" stopColor={progressColorTo}/>\n                </linearGradient>\n            </defs>\n            <circle\n                strokeWidth={trackSize}\n                fill=\"none\"\n                stroke={trackColor}\n                cx={width / 2}\n                cy={width / 2}\n                r={width / 2}\n            />\n            <path\n                className={css(styles.path)}\n                ref={svgFullPath}\n                strokeDasharray={strokeDasharray}\n                strokeDashoffset={strokeDashoffset}\n                strokeWidth={progressSize}\n                strokeLinecap={progressLineCap !== 'round' ? 'butt' : 'round'}\n                fill=\"none\"\n                stroke={`url(#${label})`}\n                d={`\n                        M ${width / 2}, ${width / 2}\n                        m 0, -${width / 2}\n                        a ${width / 2},${width / 2} 0 0,1 0,${width}\n                        a -${width / 2},-${width / 2} 0 0,1 0,-${width}\n                    `}/>\n        </svg>\n    );\n};\n\nexport default Svg;\n","import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\n\nconst touchSupported = ('ontouchstart' in window);\n\nconst SLIDER_EVENT = {\n    DOWN: touchSupported ? 'touchstart' : 'mousedown',\n    UP: touchSupported ? 'touchend' : 'mouseup',\n    MOVE: touchSupported ? 'touchmove' : 'mousemove',\n};\n\nconst CircularSlider = (props) => {\n    const {\n        label = 'DEGREES',\n        width = 280,\n        direction = 1,\n        min = 0,\n        max = 360,\n        knobColor = '#4e63ea',\n        knobZeroPosition = 'top',\n        labelColor = '#272b77',\n        labelFontSize = '1rem',\n        labelValueFontSize = '4rem',\n        labelVerticalOffset = '2rem',\n        labelHide = false,\n        progressColorFrom = '#80C3F3',\n        progressColorTo = '#4990E2',\n        progressSize = 6,\n        trackColor = '#DDDEFB',\n        trackSize = 6,\n        data = [],\n        initialDataIndex = 0,\n        progressLineCap = 'round',\n        onChange = value => {}\n    } = props;\n    const [state, setState] = useState({\n        mounted: false,\n        isDragging: false,\n        width: width,\n        radius: width / 2,\n        label: 0,\n        data: [],\n        radians: 0,\n        knob: {\n            x: 0,\n            y: 0,\n        },\n        dashFullArray: 0,\n        dashFullOffset: 0\n    });\n\n    let knobOffset = {\n        top: Math.PI / 2,\n        right: 0,\n        bottom: -Math.PI / 2,\n        left: -Math.PI\n    };\n\n    let offset = 0.005;\n    let circularSlider = useRef(null);\n    let svgFullPath = useRef(null);\n\n    const getSliderRotation = (number) => {\n        if(number === 0) return 1;\n        return Math.min(Math.max(number, -1), 1)\n    };\n\n    const generateRange = (min, max) => {\n      let rangeOfNumbers = [];\n      for(let i = min; i <= max; i++) {\n          rangeOfNumbers.push(i);\n      }\n      return rangeOfNumbers;\n    };\n\n    const offsetRelativeToDocument = useCallback(() => {\n        const rect = circularSlider.current.getBoundingClientRect();\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        return {top: rect.top + scrollTop, left: rect.left + scrollLeft};\n    }, []);\n\n    const knobPosition = useCallback((radians) => {\n        const radius = state.radius;\n        const offsetRadians = radians + knobOffset[knobZeroPosition];\n        let degrees = (offsetRadians > 0 ? offsetRadians\n            :\n            ((2 * Math.PI) + offsetRadians)) * (360 / (2 * Math.PI));\n        // change direction\n        const dashOffset = (degrees / 360) * state.dashFullArray;\n        degrees = (getSliderRotation(direction) === -1 ? 360 - degrees : degrees);\n\n        const pointsInCircle = state.data.length / 361;\n        const currentPoint = Math.floor(degrees * pointsInCircle);\n\n        setState(prevState => ({\n            ...prevState,\n            dashFullOffset: getSliderRotation(direction) === -1 ? dashOffset : state.dashFullArray - dashOffset,\n            label: state.data[currentPoint],\n            knob: {\n                x: (radius * Math.cos(radians) + radius),\n                y: (radius * Math.sin(radians) + radius),\n            }\n        }));\n\n        // props callback for parent\n        onChange(state.data[currentPoint]);\n    }, [state.dashFullArray, state.radius, state.data, knobOffset, knobZeroPosition, direction, onChange]);\n\n    const onMouseDown = useCallback((event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: true\n        }));\n\n    }, []);\n\n    const onMouseMove = useCallback((event) => {\n        event.preventDefault();\n\n        if (!state.isDragging) return;\n\n        let touch;\n        if (event.type === 'touchmove') {\n            touch = event.changedTouches[0];\n        }\n\n        const mouseXFromCenter = (event.type === 'touchmove' ? touch.pageX : event.pageX) -\n            (offsetRelativeToDocument().left + state.radius);\n        const mouseYFromCenter = (event.type === 'touchmove' ? touch.pageY : event.pageY) -\n            (offsetRelativeToDocument().top + state.radius);\n\n        const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n        knobPosition(radians);\n    }, [state.isDragging, state.radius, knobPosition, offsetRelativeToDocument]);\n\n    const onMouseUp = (event) => {\n        setState(prevState => ({\n            ...prevState,\n            isDragging: false\n        }));\n    };\n\n    // Get svg path length on mount\n    useEffect(() => {\n        const pathLength = svgFullPath.current.getTotalLength();\n\n        setState(prevState => ({\n            ...prevState,\n            mounted: true,\n            data: data.length ? [...data] : [...generateRange(min, max)],\n            dashFullArray: pathLength,\n        }));\n        // eslint-disable-next-line\n    }, [max, min]);\n\n    useEffect(() => {\n        const dataArrayLength = data.length;\n        const knobPositionIndex = (initialDataIndex > dataArrayLength - 1) ? dataArrayLength : initialDataIndex;\n\n        setState(prevState => ({\n            ...prevState,\n            radians: Math.PI / 2 - knobOffset[knobZeroPosition],\n        }));\n\n        if(knobPositionIndex && !!dataArrayLength) {\n            const pointsInCircle = Math.ceil(360 / dataArrayLength);\n            const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\n            const radians = (degrees * Math.PI / 180) - knobOffset[knobZeroPosition];\n\n            return knobPosition(radians+(offset*getSliderRotation(direction)));\n        }\n\n        return knobPosition(-knobOffset[knobZeroPosition]+(offset*getSliderRotation(direction)));\n        // eslint-disable-next-line\n    }, [state.dashFullArray, initialDataIndex, knobZeroPosition, offset, direction, data.length]);\n\n    useEffect(() => {\n        if (state.isDragging) {\n            window.addEventListener(SLIDER_EVENT.MOVE, onMouseMove, {passive: false});\n            window.addEventListener(SLIDER_EVENT.UP, onMouseUp, {passive: false});\n            return () => {\n                window.removeEventListener(SLIDER_EVENT.MOVE, onMouseMove);\n                window.removeEventListener(SLIDER_EVENT.UP, onMouseUp);\n            }\n        }\n    }, [state.isDragging, onMouseMove]);\n\n    const styles = StyleSheet.create({\n        circularSlider: {\n            position: 'relative',\n            display: 'inline-block',\n            opacity: 0,\n            transition: 'opacity 1s ease-in'\n        },\n\n        mounted: {\n            opacity: 1\n        },\n    });\n\n    return (\n        <div className={css(styles.circularSlider, state.mounted && styles.mounted)} ref={circularSlider}>\n            <Svg\n                width={width}\n                label={label}\n                direction={direction}\n                strokeDasharray={state.dashFullArray}\n                strokeDashoffset={state.dashFullOffset}\n                progressColorFrom={progressColorFrom}\n                progressColorTo={progressColorTo}\n                trackColor={trackColor}\n                progressSize={progressSize}\n                trackSize={trackSize}\n                svgFullPath={svgFullPath}\n                radiansOffset={state.radians}\n                progressLineCap={progressLineCap}\n            />\n            <Knob\n                isDragging={state.isDragging}\n                knobPosition={{ x: state.knob.x, y: state.knob.y }}\n                knobColor={knobColor}\n                onMouseDown={onMouseDown}\n            />\n            <Labels\n                labelColor={labelColor}\n                labelFontSize={labelFontSize}\n                labelVerticalOffset={labelVerticalOffset}\n                labelValueFontSize={labelValueFontSize}\n                labelHide={labelHide}\n                label={label}\n                value={`${state.label}`}\n            />\n        </div>\n    );\n};\n\nexport default CircularSlider;\n","import React from 'react';\nimport {StyleSheet, css} from 'aphrodite';\nimport CircularSlider from \"./CircularSlider\";\n\nconst App = () => {\n    const styles = StyleSheet.create({\n        wrapper: {\n            margin: '2rem'\n        },\n\n        h3: {\n            margin: '3rem 0 2rem 0',\n        },\n\n        pre: {\n            fontSize: '0.9rem',\n            borderRadius: '0.3rem',\n            backgroundColor: '#eeeeee',\n            padding: '0.5rem',\n        },\n\n        slider: {\n          padding: '0 0 0.5rem 0'\n        }\n    });\n\n    return (\n        <div className={css(styles.wrapper)}>\n            <h3 className={css(styles.h3)}>Anticlockwise rotation with the knob positioned to the right:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    direction={-1}\n                    knobZeroPosition=\"right\"\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n                {`<CircularSlider\n    direction={-1}\n    knobZeroPosition=\"right\"\n/>`}\n            </pre>\n            <h3 className={css(styles.h3)}>Custom data array with an initial array value:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    label=\"savings\"\n                    labelColor={\"#005a58\"}\n                    knobColor={\"#005a58\"}\n                    progressColorFrom={\"#00bfbd\"}\n                    progressColorTo={\"#009c9a\"}\n                    progressSize={24}\n                    trackColor={\"#eeeeee\"}\n                    trackSize={24}\n                    initialDataIndex={10}\n                    data={[\"1€\",\"2€\",\"3€\",\"4€\",\"5€\",\"6€\",\"7€\",\"8€\",\"9€\",\"10€\",\"20€\",\"30€\",\"40€\",\"50€\",\"60€\",\"70€\",\"80€\",\"90€\",\"100€\",\"200€\",\"300€\",\"400€\",\"500€\",\"600€\",\"700€\",\"800€\",\"900€\",\"1000€\",\"2000€\",\"3000€\",\"4000€\",\"5000€\",\"6000€\",\"7000€\",\"8000€\",\"9000€\",\"10000€\"]}\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n                {`<CircularSlider\n    label=\"savings\"\n    data=[\"1€\",\"2€\",...]\n    initialDataIndex={10}\n    labelColor=\"#005a58\"\n    knobColor=\"#005a58\"\n    progressColorFrom=\"#00bfbd\"\n    progressColorTo=\"#005a58\"\n    progressSize={24}\n    trackColor=\"#eeeeee\"\n    trackSize={24}\n/>`}\n            </pre>\n            <h3 className={css(styles.h3)}>Custom props with flat line cap:</h3>\n            <div className={css(styles.slider)}>\n                <CircularSlider\n                    label=\"Alphabet\"\n                    width={250}\n                    labelColor={\"#212121\"}\n                    labelValueFontSize={\"6rem\"}\n                    knobColor={\"#212121\"}\n                    progressColorFrom={\"#ff8500\"}\n                    progressColorTo={\"#a15400\"}\n                    progressSize={8}\n                    trackColor={\"#eeeeee\"}\n                    trackSize={4}\n                    progressLineCap=\"flat\"\n                    data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n                />\n            </div>\n            <pre className={css(styles.pre)}>\n                {`<CircularSlider\n    label=\"Alphabet\"\n    width={200}\n    data=[\"A\",\"B\",\"C\",...]\n    labelColor=\"#212121\"\n    labelValueFontSize=\"6rem\"\n    knobColor=\"#212121\"\n    progressLineCap=\"flat\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n/>`}\n            </pre>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}