{"version":3,"sources":["redux/reducer.js","hooks/useIsServer.js","Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["reducer","state","action","type","payload","Error","useIsServer","useState","isServer","setIsServer","useEffect","Knob","knobRef","isDragging","knobPosition","knobColor","knobSize","hideKnob","onMouseDown","onMouseUp","trackSize","children","styles","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","transformOrigin","animationTimingFunction","animationDuration","animationIterationCount","animationName","hide","opacity","style","transform","x","y","onTouchStart","onTouchEnd","ref","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelBottom","labelFontSize","valueFontSize","appendToValue","prependToValue","verticalOffset","hideLabelValue","label","labels","display","flexDirection","justifyContent","alignItems","color","userSelect","value","fontSize","bottomMargin","marginBottom","appended","right","prepended","Svg","limit","max","labelOffset","activedlabelColor","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","doubleLineColor","progressSize","svgFullPath","radiansOffset","progressLineCap","offsetAngle","data","activedItem","onLableClick","svg","path","doubleLine","text","textAnchor","activedTitle","transition","halfTrack","maxValue","curveRadian","angleUnit","length","overflow","id","x1","x2","offset","stopColor","className","strokeWidth","strokeLinecap","d","map","item","key","xlinkHref","startOffset","onClick","knobOffset","Math","PI","bottom","getOffsetRideans","getSliderRotation","number","getRadians","degrees","generateRange","min","rangeOfNumbers","i","push","CircularSlider","knobDraggable","knobEl","dataIndex","renderLabelValue","onChange","contentWidth","initialState","mounted","radius","radians","dashFullArray","dashFullOffset","circularSlider","useRef","lastAngle","dragable","undefined","useReducer","dispatch","React","setActived","updatedKey","updateState","setKnobPosition","useCallback","offsetRadians","current","dashOffset","currentPosition","currentPoint","ceil","_","isEqual","getTotalLength","cos","sin","setTimeout","random","onMouseMove","event","passive","touch","preventDefault","changedTouches","offsetRelativeToDocument","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","addEventListener","e","updatedIndex","dataArrayLength","knobPositionIndex","pointsInCircle","sanitizedLabel","replace","margin","maxWidth","ev","onMouseLeave","onTouchMove","App","wrapper","h3","pre","borderRadius","backgroundColor","padding","slider","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.efeaf3eb.chunk.js","sourcesContent":["const reducer = (state, action) => {\n    switch (action.type) {\n        case 'init':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'setKnobPosition':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'onMouseDown':\n        case 'onMouseUp':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'setInitialKnobPosition':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        default:\n            throw new Error();\n    }\n};\n\nexport default reducer;\n","import { useState, useEffect } from 'react'\n\nconst useIsServer = () => {\n    const [isServer, setIsServer] = useState(true)\n    useEffect(() => {\n        setIsServer(false)\n    }, [])\n    return isServer\n}\n\nexport default useIsServer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst Knob = ({\n  knobRef,\n  isDragging,\n  knobPosition,\n  knobColor,\n  knobSize,\n  hideKnob,\n  onMouseDown,\n  onMouseUp,\n  trackSize,\n  children,\n}) => {\n  const styles = {\n    knob: {\n      position: \"absolute\",\n      left: `-${knobSize / 2 - trackSize / 2}px`,\n      top: `-${knobSize / 2 - trackSize / 2}px`,\n      cursor: \"grab\",\n      zIndex: 3,\n    },\n\n    dragging: {\n      cursor: \"grabbing\",\n    },\n\n    pause: {\n      animationPlayState: \"paused\",\n    },\n\n    animation: {\n      transformOrigin: \"50% 50%\",\n      animationTimingFunction: \"ease-out\",\n      animationDuration: \"1500ms\",\n      animationIterationCount: \"infinite\",\n      animationName: \"pulse\",\n    },\n\n    hide: {\n      opacity: 0,\n    },\n  };\n\n  const defaultKnobIcon = () => {\n    return (\n      <svg width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 36 36`}>\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\" />\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\" />\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\" />\n      </svg>\n    );\n  };\n\n  return (\n    <div\n      style={{\n        transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`,\n        ...styles.knob,\n        ...(isDragging && styles.dragging),\n        ...(hideKnob && styles.hide),\n      }}\n      onMouseDown={onMouseDown}\n      onTouchStart={onMouseDown}\n      onTouchEnd={onMouseUp}\n    >\n      <svg ref={knobRef} width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 ${knobSize} ${knobSize}`}>\n        <circle\n          style={{ ...styles.animation, ...(isDragging && styles.pause) }}\n          fill={knobColor}\n          fillOpacity=\"0.2\"\n          stroke=\"none\"\n          cx={knobSize / 2}\n          cy={knobSize / 2}\n          r={knobSize / 2}\n        />\n        <circle fill={knobColor} stroke=\"none\" cx={knobSize / 2} cy={knobSize / 2} r={(knobSize * 2) / 3 / 2} />\n        {children ? children : defaultKnobIcon()}\n      </svg>\n    </div>\n  );\n};\n\nKnob.propTypes = {\n  isDragging: PropTypes.bool,\n  knobPosition: PropTypes.object,\n  knobColor: PropTypes.string,\n  knobRadius: PropTypes.number,\n  knobSize: PropTypes.number,\n  trackSize: PropTypes.number,\n  children: PropTypes.element,\n  onMouseDown: PropTypes.func,\n};\n\nexport default Knob;\n","import React from 'react';\nimport PropTypes, { any } from 'prop-types';\n\nconst Labels = ({\n\tlabelColor,\n\tlabelBottom,\n\tlabelFontSize,\n\tvalueFontSize,\n\tappendToValue,\n\tprependToValue,\n\tverticalOffset,\n\thideLabelValue,\n\tlabel\n}) => {\n\tconst styles = {\n\t\tlabels: {\n\t\t\tposition: 'absolute',\n\t\t\ttop: '0',\n\t\t\tleft: '0',\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tcolor: `${labelColor}`,\n\t\t\tuserSelect: 'none',\n\t\t\tzIndex: 1,\n\t\t},\n\n\t\tvalue: {\n\t\t\tfontSize: `${valueFontSize}`,\n\t\t\tposition: 'relative',\n\t\t},\n\n\t\tbottomMargin: {\n\t\t\tmarginBottom: `calc(${verticalOffset})`,\n\t\t},\n\n\t\tappended: {\n\t\t\tposition: 'absolute',\n\t\t\tright: '0',\n\t\t\ttop: '0',\n\t\t\ttransform: 'translate(100%, 0)',\n\t\t},\n\n\t\tprepended: {\n\t\t\tposition: 'absolute',\n\t\t\tleft: '0',\n\t\t\ttop: '0',\n\t\t\ttransform: 'translate(-100%, 0)',\n\t\t},\n\n\t\thide: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t};\n\n\treturn (\n\t\t<div style={{ ...styles.labels, ...(hideLabelValue && styles.hide) }}>\n\t\t\t{labelBottom || <div style={{ fontSize: labelFontSize }}>{label}</div>}\n\t\t\t<div\n\t\t\t\tstyle={{ ...styles.value, ...(!labelBottom && styles.bottomMargin) }}>\n\t\t\t\t<code>\n\t\t\t\t\t<span style={styles.prepended}>{prependToValue}</span>\n\t\t\t\t\t{label?.value || label}\n\t\t\t\t\t<span style={styles.appended}>{appendToValue}</span>\n\t\t\t\t</code>\n\t\t\t</div>\n\t\t\t{labelBottom && <div style={{ fontSize: labelFontSize }}>{label}</div>}\n\t\t</div>\n\t);\n};\n\nLabels.propTypes = {\n\tlabel: any,\n\tlabelColor: PropTypes.string,\n\tlabelBottom: PropTypes.bool,\n\tlabelFontSize: PropTypes.string,\n\tvalueFontSize: PropTypes.string,\n\tappendToValue: PropTypes.string,\n\tprependToValue: PropTypes.string,\n\tverticalOffset: PropTypes.string,\n\thideLabelValue: PropTypes.bool,\n};\n\nexport default Labels;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Svg = ({\n  width,\n  limit,\n  max,\n  label,\n  labelColor,\n  labelFontSize,\n  labelOffset,\n  activedlabelColor,\n  direction,\n  strokeDasharray,\n  strokeDashoffset,\n  progressColorFrom,\n  progressColorTo,\n  trackColor,\n  doubleLineColor,\n  progressSize,\n  trackSize,\n  svgFullPath,\n  radiansOffset,\n  progressLineCap,\n  offsetAngle,\n  data,\n  activedItem = 0,\n  onLableClick,\n}) => {\n  const styles = {\n    svg: {\n      position: \"relative\",\n      zIndex: 2,\n    },\n\n    path: {\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-1, 1)\" : \"scale(1, 1)\"}`,\n      transformOrigin: \"center center\",\n    },\n    doubleLine: {\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-0.9, 0.9)\" : \"scale(0.9, 0.9)\"}`,\n      transformOrigin: \"center center\",\n    },\n    label: {\n      transform: \"translateY(20px)\",\n    },\n    text: {\n      textAnchor: \"middle\",\n      fontSize: labelFontSize,\n      fill: labelColor,\n      cursor: \"pointer\",\n    },\n    activedTitle: {\n      fill: activedlabelColor,\n      transition: \"all 0.6s ease-in-out\",\n    },\n  };\n\n  const halfTrack = trackSize / 2;\n  const maxValue = (strokeDasharray * (360 - limit)) / 360;\n  const curveRadian = width / 2 + labelOffset;\n  const angleUnit = data ? limit / data.length : 1;\n  \n  return (\n    <svg\n      width={`${width}px`}\n      height={`${width}px`}\n      viewBox={`0 0 ${width} ${width}`}\n      overflow=\"visible\"\n      style={styles.svg}\n    >\n      <defs>\n        <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n          <stop offset=\"0%\" stopColor={progressColorFrom} />\n          <stop offset=\"100%\" stopColor={progressColorTo} />\n        </linearGradient>\n      </defs>\n      <path\n        className=\"progress-line\"\n        style={styles.path}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={maxValue}\n        strokeWidth={trackSize}\n        stroke={trackColor}\n        strokeLinecap={progressLineCap}\n        fill=\"none\"\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\n        `}\n      />\n      {doubleLineColor && (\n        <path\n          style={styles.doubleLine}\n          strokeDasharray={strokeDasharray}\n          strokeDashoffset={strokeDashoffset}\n          strokeWidth={progressSize}\n          strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\n          fill=\"none\"\n          stroke={doubleLineColor}\n          d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\n        `}\n        />\n      )}\n      <path\n        style={styles.path}\n        ref={svgFullPath}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={strokeDashoffset}\n        strokeWidth={progressSize}\n        strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\n        fill=\"none\"\n        stroke={`url(#${label})`}\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\n        `}\n      />\n\n      <path\n        id=\"myTextPath\"\n        d={`\n          M ${curveRadian},${curveRadian} m ${-curveRadian}, 0  \n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian} \n          A ${curveRadian},${curveRadian} 0 0 1 -${curveRadian},0 \n          A ${curveRadian},${curveRadian} 0 0 1 0,-${curveRadian} \n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian}\n        `}\n        transform={`translate(${width / 2},${width / 2})`}\n        fill=\"none\"\n        stroke=\"none\"\n      />\n\n      <text style={styles.text}>\n        {data?.map((item, key) => (\n          <textPath\n            xlinkHref=\"#myTextPath\"\n            startOffset={`${(angleUnit * key + angleUnit / 2 - offsetAngle) / 3.6}%`}\n            key={key}\n          >\n            <tspan style={(key === activedItem - 1 && styles.activedTitle) || {}} onClick={() => onLableClick(key + 1)}>\n              {item.value}\n            </tspan>\n          </textPath>\n        ))}\n      </text>\n    </svg>\n  );\n};\n\nSvg.propTypes = {\n  width: PropTypes.number,\n  label: PropTypes.string,\n  direction: PropTypes.number,\n  svgFullPath: PropTypes.object,\n  strokeDasharray: PropTypes.number,\n  strokeDashoffset: PropTypes.number,\n  progressColorFrom: PropTypes.string,\n  progressColorTo: PropTypes.string,\n  progressLineCap: PropTypes.string,\n  progressSize: PropTypes.number,\n  trackColor: PropTypes.string,\n  trackSize: PropTypes.number,\n  radiansOffset: PropTypes.number,\n};\n\nexport default Svg;\n","import React, { useEffect, useReducer, useCallback, useRef } from \"react\";\nimport window from \"global\";\nimport PropTypes, { any } from \"prop-types\";\nimport reducer from \"../redux/reducer\";\nimport useIsServer from \"../hooks/useIsServer\";\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\nimport _ from \"lodash\";\n\nconst spreadDegrees = 360;\nconst knobOffset = {\n  top: Math.PI / 2,\n  right: 0,\n  bottom: -Math.PI / 2,\n  left: -Math.PI,\n};\n\nconst timeout = (delay) => {\n  return new Promise((res) => setTimeout(res, delay));\n};\nconst getOffsetRideans = (knobPosition, offsetAngle) => {\n  return knobOffset[knobPosition] + (offsetAngle / 180) * Math.PI;\n};\n\nconst getSliderRotation = (number) => {\n  if (number < 0) return -1;\n  return 1;\n};\n\nconst getRadians = (degrees) => {\n  return (degrees * Math.PI) / 180;\n};\n\nconst generateRange = (min, max) => {\n  let rangeOfNumbers = [];\n  for (let i = min; i <= max; i++) {\n    rangeOfNumbers.push(i);\n  }\n  return rangeOfNumbers;\n};\n\nconst CircularSlider = ({\n  label = \"SERVICES\",\n  width = 280,\n  direction = 1,\n  min = 0,\n  max = 360,\n  limit = 360,\n  offsetAngle = -45,\n  knobColor = \"#4e63ea\",\n  knobSize = 36,\n  knobPosition = \"top\",\n  hideKnob = false,\n  knobDraggable = true,\n  knobEl = null,\n  labelBottom = false,\n  labelColor = \"#272b77\",\n  labelFontSize = \"1rem\",\n  labelOffset = 20,\n  activedlabelColor = \"#c54a1b\",\n  valueFontSize = \"3rem\",\n  appendToValue = \"\",\n  prependToValue = \"\",\n  verticalOffset = \"1.5rem\",\n  hideLabelValue = false,\n  progressColorFrom = \"#80C3F3\",\n  progressColorTo = \"#4990E2\",\n  progressSize = 8,\n  trackColor = \"#DDDEFB\",\n  trackSize = 8,\n  doubleLineColor = \"#DDDEFB\",\n  data = [],\n  dataIndex = 0,\n  progressLineCap = \"round\",\n  renderLabelValue = null,\n  onChange = (value) => {},\n}) => {\n  const contentWidth = width - 2 * labelOffset;\n  const initialState = {\n    mounted: false,\n    isDragging: false,\n    contentWidth: contentWidth,\n    radius: contentWidth / 2,\n    knobPosition: knobPosition,\n    label: 0,\n    data: data,\n    radians: 0,\n    offset: 0,\n    knob: {\n      x: 0,\n      y: 0,\n    },\n    dashFullArray: 0,\n    dashFullOffset: 0,\n  };\n\n  const circularSlider = useRef(null);\n  const knobRef = useRef(null);\n  const svgFullPath = useRef(null);\n  const lastAngle = useRef(0);\n  const processFlag = useRef(false);\n  const dragable = useRef(undefined);\n  const isServer = useIsServer();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [activedItem, setActived] = React.useState(null);\n  const [updatedKey, updateState] = React.useState(null);\n\n  // eslint-disable-next-line\n  const microSlide = async ({ degrees, pointsInCircle, offset }) => {\n    if (processFlag.current) return;\n    processFlag.current = true;\n\n    const step = 10;\n    let startPoint = lastAngle.current - pointsInCircle / 2;\n    const distance = Math.abs(degrees - startPoint);\n    const stepDrection = degrees > startPoint ? 1 : -1;\n    const stepCount = Math.round(distance / step);\n\n    if (stepCount < 1) {\n      processFlag.current = false;\n      return;\n    }\n\n    for (let i = 1; i <= stepCount; i++) {\n      startPoint += step * stepDrection;\n      await timeout(100);\n\n      if (Math.abs(startPoint - degrees) < step) {\n        processFlag.current = false;\n        startPoint = degrees;\n      }\n\n      const radians = getRadians(startPoint) - getOffsetRideans(state.knobPosition, offsetAngle);\n      setKnobPosition(radians + offset * getSliderRotation(direction));\n      if (!processFlag.current) {\n        return;\n      }\n    }\n  };\n\n  const setKnobPosition = useCallback(\n    (radians) => {\n      const radius = state.radius - trackSize / 2;\n      const offsetRadians = radians + getOffsetRideans(knobPosition, offsetAngle);\n      let degrees = (offsetRadians > 0 ? offsetRadians : 2 * Math.PI + offsetRadians) * (spreadDegrees / (2 * Math.PI));\n\n      if (!activedItem && degrees > limit) {\n        degrees = 0;\n        if (dragable.current === undefined) {\n          dragable.current = false;\n        } else {\n          return;\n        }\n      } else if (knobPosition === \"bottom\" && degrees > limit) {\n        degrees = limit;\n        return;\n      } else if (knobPosition === \"top\" && degrees < 360 - limit) {\n        degrees = 360 - limit;\n        return;\n      }\n\n      // change direction\n      const dashOffset = (degrees / spreadDegrees) * state.dashFullArray;\n      degrees = getSliderRotation(direction) === -1 ? spreadDegrees - degrees : degrees;\n      lastAngle.current = degrees;\n      knobRef.current.style = `transform: rotate(${degrees + offsetAngle}deg);`;\n      const pointsInCircle = state.data.length / limit;\n      const currentPosition = degrees * pointsInCircle;\n      let currentPoint = currentPosition > 0.1 ? Math.ceil(currentPosition) : 0;\n\n      setActived(currentPoint);\n\n      if (!_.isEqual(state.data[currentPoint - 1], state.label)) {\n        onChange(state.data[currentPoint - 1]);\n      }\n\n      dispatch({\n        type: \"setKnobPosition\",\n        payload: {\n          dashFullOffset:\n            getSliderRotation(direction) === -1\n              ? dashOffset\n              : (state.dashFullArray || svgFullPath.current.getTotalLength()) - dashOffset,\n          label: state.data[currentPoint - 1],\n          knob: {\n            x: radius * Math.cos(radians) + radius,\n            y: radius * Math.sin(radians) + radius,\n          },\n        },\n      });\n    },\n    // eslint-disable-next-line\n    [\n      offsetAngle,\n      limit,\n      state.dashFullArray,\n      state.radius,\n      state.data,\n      state.label,\n      knobPosition,\n      trackSize,\n      direction,\n      onChange,\n    ]\n  );\n\n  const onMouseDown = () => {\n    dragable.current = true;\n    dispatch({\n      type: \"onMouseDown\",\n      payload: {\n        isDragging: true,\n      },\n    });\n  };\n\n  const onMouseUp = () => {\n    dragable.current = false;\n    dispatch({\n      type: \"onMouseUp\",\n      payload: {\n        isDragging: false,\n      },\n    });\n\n    setTimeout(() => {\n      updateState(Math.random());\n    }, 200);\n  };\n\n  const onMouseMove = useCallback(\n    (event, passive = false) => {\n      if (!dragable.current) return;\n\n      if (passive) event.preventDefault();\n\n      let touch;\n      if (event.type === \"touchmove\") {\n        touch = event.changedTouches[0];\n      }\n\n      const offsetRelativeToDocument = (ref) => {\n        const rect = ref.current.getBoundingClientRect();\n        const scrollLeft = !isServer && ((window?.pageXOffset ?? 0) || (document?.documentElement?.scrollLeft ?? 0));\n        const scrollTop = !isServer && ((window?.pageYOffset ?? 0) || (document?.documentElement?.scrollTop ?? 0));\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n      };\n\n      const mouseXFromCenter =\n        (event.type === \"touchmove\" ? touch.pageX : event.pageX) -\n        (offsetRelativeToDocument(circularSlider).left + state.radius);\n      const mouseYFromCenter =\n        (event.type === \"touchmove\" ? touch.pageY : event.pageY) -\n        (offsetRelativeToDocument(circularSlider).top + state.radius);\n\n      const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n\n      setKnobPosition(radians);\n    },\n    [state.radius, setKnobPosition, isServer]\n  );\n\n  // Get svg path length onmount\n  useEffect(() => {\n    circularSlider.current.addEventListener(\n      \"touchmove\",\n      function (e) {\n        onMouseMove(e, true);\n      },\n      { passive: false }\n    );\n\n    dispatch({\n      type: \"init\",\n      payload: {\n        mounted: true,\n        data: state.data.length ? [...state.data] : [...generateRange(min, max)],\n        dashFullArray: svgFullPath.current.getTotalLength ? svgFullPath.current.getTotalLength() : 0,\n      },\n    });\n\n    // eslint-disable-next-line\n  }, [max, min]);\n\n  // Set knob position\n  useEffect(() => {\n    let updatedIndex = activedItem === null ? dataIndex : activedItem;\n    const dataArrayLength = state.data.length;\n    const knobPositionIndex = updatedIndex > dataArrayLength ? dataArrayLength : updatedIndex;\n\n    if (!!dataArrayLength) {\n      const pointsInCircle = limit / dataArrayLength;\n      const offset = getRadians(pointsInCircle) / 2;\n\n      dispatch({\n        type: \"setInitialKnobPosition\",\n        payload: {\n          radians: Math.PI / 2 - getOffsetRideans(state.knobPosition, offsetAngle),\n          offset,\n        },\n      });\n\n      const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\n      const radians = getRadians(degrees) - getOffsetRideans(state.knobPosition, offsetAngle);\n\n      if (!knobPositionIndex) {\n        return setKnobPosition(radians);\n      }\n      return setKnobPosition(radians - offset * getSliderRotation(direction));\n    }\n\n    // eslint-disable-next-line\n  }, [state.dashFullArray, state.knobPosition, state.data.length, dataIndex, direction, updatedKey]);\n\n  const sanitizedLabel = label.replace(/[\\W_]/g, \"_\");\n\n  const styles = {\n    circularSlider: {\n      position: \"relative\",\n      display: \"inline-block\",\n      opacity: 0,\n      transition: \"opacity 1s ease-in\",\n      margin: `${labelOffset + 25}px`,\n      maxWidth: `${width}px`,\n    },\n    value: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n    },\n    mounted: {\n      opacity: 1,\n    },\n  };\n\n  return (\n    <div\n      style={{ ...styles.circularSlider, ...(state.mounted && styles.mounted) }}\n      ref={circularSlider}\n      onMouseMove={(ev) => onMouseMove(ev)}\n      onMouseUp={() => onMouseUp()}\n      onMouseLeave={() => onMouseUp()}\n      onTouchMove={onMouseMove}\n    >\n      <Svg\n        width={contentWidth}\n        limit={limit}\n        max={max}\n        label={sanitizedLabel}\n        labelOffset={labelOffset}\n        direction={direction}\n        strokeDasharray={state.dashFullArray}\n        strokeDashoffset={state.dashFullOffset || 100}\n        svgFullPath={svgFullPath}\n        progressSize={progressSize}\n        progressColorFrom={progressColorFrom}\n        progressColorTo={progressColorTo}\n        progressLineCap={progressLineCap}\n        doubleLineColor={doubleLineColor}\n        trackColor={trackColor}\n        trackSize={trackSize}\n        radiansOffset={state.radians}\n        offsetAngle={offsetAngle}\n        labelColor={labelColor}\n        labelFontSize={labelFontSize}\n        activedlabelColor={activedlabelColor}\n        data={data}\n        activedItem={activedItem}\n        onLableClick={(id) => {\n          setActived(id);\n          updateState(Math.random());\n        }}\n      />\n      {knobDraggable && (\n        <Knob\n          knobRef={knobRef}\n          isDragging={state.isDragging}\n          knobPosition={{ x: state.knob.x, y: state.knob.y }}\n          knobSize={knobSize > trackSize ? knobSize : trackSize}\n          knobColor={knobColor}\n          trackSize={trackSize}\n          hideKnob={hideKnob}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n        >\n          {knobEl}\n        </Knob>\n      )}\n      {renderLabelValue ? (\n        <div style={styles.value}>{renderLabelValue}</div>\n      ) : (\n        <Labels\n          label={label}\n          labelColor={labelColor}\n          labelBottom={labelBottom}\n          labelFontSize={labelFontSize}\n          verticalOffset={verticalOffset}\n          valueFontSize={valueFontSize}\n          appendToValue={appendToValue}\n          prependToValue={prependToValue}\n          hideLabelValue={hideLabelValue}\n          value={state.label}\n        />\n      )}\n    </div>\n  );\n};\n\nCircularSlider.propTypes = {\n  label: any,\n  width: PropTypes.number,\n  direction: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  knobColor: PropTypes.string,\n  knobPosition: PropTypes.string,\n  hideKnob: PropTypes.bool,\n  knobDraggable: PropTypes.bool,\n  knobEl: PropTypes.element,\n  labelColor: PropTypes.string,\n  labelBottom: PropTypes.bool,\n  labelFontSize: PropTypes.string,\n  valueFontSize: PropTypes.string,\n  appendToValue: PropTypes.string,\n  renderLabelValue: PropTypes.element,\n  prependToValue: PropTypes.string,\n  verticalOffset: PropTypes.string,\n  hideLabelValue: PropTypes.bool,\n  progressLineCap: PropTypes.string,\n  progressColorFrom: PropTypes.string,\n  progressColorTo: PropTypes.string,\n  progressSize: PropTypes.number,\n  trackColor: PropTypes.string,\n  trackSize: PropTypes.number,\n  data: PropTypes.array,\n  dataIndex: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nexport default CircularSlider;\n","import React from \"react\";\nimport CircularSlider from \"./CircularSlider\";\n// import { ReactComponent as DragIcon } from './assets/arrow.svg';\n\nconst App = () => {\n  const styles = {\n    wrapper: {\n      margin: \"2rem\",\n    },\n\n    h3: {\n      margin: \"3rem 0 2rem 0\",\n    },\n\n    pre: {\n      fontSize: \"0.9rem\",\n      borderRadius: \"0.3rem\",\n      backgroundColor: \"#eeeeee\",\n      padding: \"0.5rem\",\n    },\n\n    slider: {\n      padding: \"0 0 0.5rem 0\",\n    },\n  };\n\n  return (\n    <div style={styles.wrapper}>\n      <h3 style={styles.h3}>\n        Anticlockwise rotation with the knob positioned to the right and \"°\"\n        appended to the value:\n      </h3>\n      <div style={styles.slider}>\n        <CircularSlider\n          width={400}\n          limit={270}\n          offsetAngle={-45}\n          labelOffset={20}\n          direction={1}\n          data={[\n            {\n              key: 1,\n              value: \"STAFFING\",\n            },\n            {\n              key: 2,\n              value: \"TEAM\",\n            },\n            {\n              key: 1,\n              value: \"PROJECT\",\n            },\n            {\n              key: 1,\n              value: \"MANAGED\",\n            }\n          ]}\n          knobPosition=\"bottom\"\n          valueFontSize=\"2rem\"\n          renderLabelValue={null}\n          progressLineCap=\"flat\"\n          progressSize={24}\n          doubleLineColor={\"#DDDEFB\"}\n          trackColor=\"#eeeeee\"\n          trackSize={24}\n          knobColor = \"blue\"\n          knobSize= {56}\n          onChange={(e)=>console.log(e)}\n        >\n        </CircularSlider>\n      </div>\n      <pre className={styles.pre}>\n{`<CircularSlider\n  width={400}\n  limit={270}\n  offsetAngle={-45}\n  labelOffset={20}\n  direction={1}\n  data={[\n    {\n      key: 1,\n      value: \"STAFFING\",\n    },\n    {\n      key: 2,\n      value: \"TEAM\",\n    },\n    {\n      key: 1,\n      value: \"PROJECT\",\n    },\n    {\n      key: 1,\n      value: \"MANAGED\",\n    }\n  ]}\n  knobPosition=\"bottom\"\n  valueFontSize=\"2rem\"\n  renderLabelValue={null}\n  progressLineCap=\"flat\"\n  progressSize={24}\n  trackColor=\"#eeeeee\"\n  trackSize={24}\n  knobColor = \"blue\"\n  knobSize= {56}\n/>`}\n      </pre>\n      <h3 className={styles.h3}>\n        An initial value of 20, \"$\" prepended and \"K\" appended to the value with\n        a custom knob icon and the label on the bottom:\n      </h3>\n      <div className={styles.slider}>\n        {/* <CircularSlider\n          label=\"savings account\"\n          min={0}\n          max={100}\n          dataIndex={20}\n          prependToValue=\"$\"\n          appendToValue=\"K\"\n          labelColor=\"#005a58\"\n          labelBottom={true}\n          knobColor=\"#005a58\"\n          knobSize={72}\n          progressColorFrom=\"#00bfbd\"\n          progressColorTo=\"#009c9a\"\n          progressSize={24}\n          trackColor=\"#eeeeee\"\n          trackSize={24}\n        >\n          <DragIcon x=\"22\" y=\"22\" width=\"28px\" height=\"28px\" />\n        </CircularSlider> */}\n      </div>\n      <pre className={styles.pre}>\n        {`import { ReactComponent as PowerIcon } from './assets/power.svg';\n.\n.\n.\n<CircularSlider\n    label=\"savings\"\n    min={0}\n    max={100}\n    dataIndex={20}\n    prependToValue=\"$\"\n    appendToValue=\"K\"\n    labelColor=\"#005a58\"\n    labelBottom={true}\n    knobColor=\"#005a58\"\n    knobSize={72}\n    progressColorFrom=\"#00bfbd\"\n    progressColorTo=\"#005a58\"\n    progressSize={24}\n    trackColor=\"#eeeeee\"\n    trackSize={24}\n>\n    <DragIcon x='22' y='22' width='28px' height='28px' />\n</CircularSlider>`}\n      </pre>\n      <h3 className={styles.h3}>\n        A flat line cap with the track size smaller than the progress track size\n        and a smiley knob:\n      </h3>\n      <div className={styles.slider}>\n        {/* <CircularSlider\n          label=\"Alphabet\"\n          progressLineCap=\"flat\"\n          dataIndex={1}\n          max={270}\n          width={250}\n          labelColor=\"#212121\"\n          valueFontSize=\"6rem\"\n          verticalOffset=\"1rem\"\n          knobColor=\"#212121\"\n          progressColorFrom=\"#ff8500\"\n          progressColorTo=\"#a15400\"\n          progressSize={12}\n          trackColor=\"#eeeeee\"\n          trackSize={10}\n          data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n        >\n          <EmojiIcon x=\"9\" y=\"9\" width=\"18px\" height=\"18px\" />\n        </CircularSlider> */}\n      </div>\n      <pre className={styles.pre}>\n        {`\nimport { ReactComponent as EmojiIcon } from './assets/emoji.svg';\n.\n.\n.\n<CircularSlider\n    width={200}\n    progressLineCap=\"flat\"\n    dataIndex={1}\n    label=\"Alphabet\"\n    data=[\"A\",\"B\",\"C\"]//...\n    labelColor=\"#212121\"\n    valueFontSize=\"6rem\"\n    verticalOffset=\"1rem\"\n    knobColor=\"#212121\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n>\n    <EmojiIcon x=\"9\" y=\"9\" width=\"18px\" height=\"18px\" />\n</CircularSlider>`}\n      </pre>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}